{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e2) {\n          throw _e2;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e3) {\n      didErr = true;\n      err = _e3;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/* globals RTCPeerConnection: false, RTCSessionDescription: false */\n\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar sdp_transform = require('sdp-transform');\n\nvar Logger = require('./Logger');\n\nvar JsSIP_C = require('./Constants');\n\nvar Exceptions = require('./Exceptions');\n\nvar Transactions = require('./Transactions');\n\nvar Utils = require('./Utils');\n\nvar Timers = require('./Timers');\n\nvar SIPMessage = require('./SIPMessage');\n\nvar Dialog = require('./Dialog');\n\nvar RequestSender = require('./RequestSender');\n\nvar RTCSession_DTMF = require('./RTCSession/DTMF');\n\nvar RTCSession_Info = require('./RTCSession/Info');\n\nvar RTCSession_ReferNotifier = require('./RTCSession/ReferNotifier');\n\nvar RTCSession_ReferSubscriber = require('./RTCSession/ReferSubscriber');\n\nvar URI = require('./URI');\n\nvar logger = new Logger('RTCSession');\nvar C = {\n  // RTCSession states.\n  STATUS_NULL: 0,\n  STATUS_INVITE_SENT: 1,\n  STATUS_1XX_RECEIVED: 2,\n  STATUS_INVITE_RECEIVED: 3,\n  STATUS_WAITING_FOR_ANSWER: 4,\n  STATUS_ANSWERED: 5,\n  STATUS_WAITING_FOR_ACK: 6,\n  STATUS_CANCELED: 7,\n  STATUS_TERMINATED: 8,\n  STATUS_CONFIRMED: 9\n};\n/**\n * Local variables.\n */\n\nvar holdMediaTypes = ['audio', 'video'];\n\nmodule.exports = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(RTCSession, _EventEmitter);\n\n  var _super = _createSuper(RTCSession);\n\n  _createClass(RTCSession, null, [{\n    key: \"C\",\n\n    /**\n     * Expose C object.\n     */\n    get: function get() {\n      return C;\n    }\n  }]);\n\n  function RTCSession(ua) {\n    var _this;\n\n    _classCallCheck(this, RTCSession);\n\n    logger.debug('new');\n    _this = _super.call(this);\n    _this._id = null;\n    _this._ua = ua;\n    _this._status = C.STATUS_NULL;\n    _this._dialog = null;\n    _this._earlyDialogs = {};\n    _this._contact = null;\n    _this._from_tag = null;\n    _this._to_tag = null; // The RTCPeerConnection instance (public attribute).\n\n    _this._connection = null; // Prevent races on serial PeerConnction operations.\n\n    _this._connectionPromiseQueue = Promise.resolve(); // Incoming/Outgoing request being currently processed.\n\n    _this._request = null; // Cancel state for initial outgoing request.\n\n    _this._is_canceled = false;\n    _this._cancel_reason = ''; // RTCSession confirmation flag.\n\n    _this._is_confirmed = false; // Is late SDP being negotiated.\n\n    _this._late_sdp = false; // Default rtcOfferConstraints and rtcAnswerConstrainsts (passed in connect() or answer()).\n\n    _this._rtcOfferConstraints = null;\n    _this._rtcAnswerConstraints = null; // Local MediaStream.\n\n    _this._localMediaStream = null;\n    _this._localMediaStreamLocallyGenerated = false; // Flag to indicate PeerConnection ready for new actions.\n\n    _this._rtcReady = true; // SIP Timers.\n\n    _this._timers = {\n      ackTimer: null,\n      expiresTimer: null,\n      invite2xxTimer: null,\n      userNoAnswerTimer: null\n    }; // Session info.\n\n    _this._direction = null;\n    _this._local_identity = null;\n    _this._remote_identity = null;\n    _this._start_time = null;\n    _this._end_time = null;\n    _this._tones = null; // Mute/Hold state.\n\n    _this._audioMuted = false;\n    _this._videoMuted = false;\n    _this._localHold = false;\n    _this._remoteHold = false; // Session Timers (RFC 4028).\n\n    _this._sessionTimers = {\n      enabled: _this._ua.configuration.session_timers,\n      refreshMethod: _this._ua.configuration.session_timers_refresh_method,\n      defaultExpires: JsSIP_C.SESSION_EXPIRES,\n      currentExpires: null,\n      running: false,\n      refresher: false,\n      timer: null // A setTimeout.\n\n    }; // Map of ReferSubscriber instances indexed by the REFER's CSeq number.\n\n    _this._referSubscribers = {}; // Custom session empty object for high level use.\n\n    _this._data = {};\n    return _this;\n  }\n  /**\n   * User API\n   */\n  // Expose RTCSession constants as a property of the RTCSession instance.\n\n\n  _createClass(RTCSession, [{\n    key: \"isInProgress\",\n    value: function isInProgress() {\n      switch (this._status) {\n        case C.STATUS_NULL:\n        case C.STATUS_INVITE_SENT:\n        case C.STATUS_1XX_RECEIVED:\n        case C.STATUS_INVITE_RECEIVED:\n        case C.STATUS_WAITING_FOR_ANSWER:\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"isEstablished\",\n    value: function isEstablished() {\n      switch (this._status) {\n        case C.STATUS_ANSWERED:\n        case C.STATUS_WAITING_FOR_ACK:\n        case C.STATUS_CONFIRMED:\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"isEnded\",\n    value: function isEnded() {\n      switch (this._status) {\n        case C.STATUS_CANCELED:\n        case C.STATUS_TERMINATED:\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"isMuted\",\n    value: function isMuted() {\n      return {\n        audio: this._audioMuted,\n        video: this._videoMuted\n      };\n    }\n  }, {\n    key: \"isOnHold\",\n    value: function isOnHold() {\n      return {\n        local: this._localHold,\n        remote: this._remoteHold\n      };\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(target) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var initCallback = arguments.length > 2 ? arguments[2] : undefined;\n      logger.debug('connect()');\n      var originalTarget = target;\n      var eventHandlers = Utils.cloneObject(options.eventHandlers);\n      var extraHeaders = Utils.cloneArray(options.extraHeaders);\n      var mediaConstraints = Utils.cloneObject(options.mediaConstraints, {\n        audio: true,\n        video: true\n      });\n      var mediaStream = options.mediaStream || null;\n      var pcConfig = Utils.cloneObject(options.pcConfig, {\n        iceServers: []\n      });\n      var rtcConstraints = options.rtcConstraints || null;\n      var rtcOfferConstraints = options.rtcOfferConstraints || null;\n      this._rtcOfferConstraints = rtcOfferConstraints;\n      this._rtcAnswerConstraints = options.rtcAnswerConstraints || null;\n      this._data = options.data || this._data; // Check target.\n\n      if (target === undefined) {\n        throw new TypeError('Not enough arguments');\n      } // Check Session Status.\n\n\n      if (this._status !== C.STATUS_NULL) {\n        throw new Exceptions.InvalidStateError(this._status);\n      } // Check WebRTC support.\n\n\n      if (!window.RTCPeerConnection) {\n        throw new Exceptions.NotSupportedError('WebRTC not supported');\n      } // Check target validity.\n\n\n      target = this._ua.normalizeTarget(target);\n\n      if (!target) {\n        throw new TypeError(\"Invalid target: \".concat(originalTarget));\n      } // Session Timers.\n\n\n      if (this._sessionTimers.enabled) {\n        if (Utils.isDecimal(options.sessionTimersExpires)) {\n          if (options.sessionTimersExpires >= JsSIP_C.MIN_SESSION_EXPIRES) {\n            this._sessionTimers.defaultExpires = options.sessionTimersExpires;\n          } else {\n            this._sessionTimers.defaultExpires = JsSIP_C.SESSION_EXPIRES;\n          }\n        }\n      } // Set event handlers.\n\n\n      for (var event in eventHandlers) {\n        if (Object.prototype.hasOwnProperty.call(eventHandlers, event)) {\n          this.on(event, eventHandlers[event]);\n        }\n      } // Session parameter initialization.\n\n\n      this._from_tag = Utils.newTag(); // Set anonymous property.\n\n      var anonymous = options.anonymous || false;\n      var requestParams = {\n        from_tag: this._from_tag\n      };\n      this._contact = this._ua.contact.toString({\n        anonymous: anonymous,\n        outbound: true\n      });\n\n      if (anonymous) {\n        requestParams.from_display_name = 'Anonymous';\n        requestParams.from_uri = new URI('sip', 'anonymous', 'anonymous.invalid');\n        extraHeaders.push(\"P-Preferred-Identity: \".concat(this._ua.configuration.uri.toString()));\n        extraHeaders.push('Privacy: id');\n      } else if (options.fromUserName) {\n        requestParams.from_uri = new URI('sip', options.fromUserName, this._ua.configuration.uri.host);\n        extraHeaders.push(\"P-Preferred-Identity: \".concat(this._ua.configuration.uri.toString()));\n      }\n\n      if (options.fromDisplayName) {\n        requestParams.from_display_name = options.fromDisplayName;\n      }\n\n      extraHeaders.push(\"Contact: \".concat(this._contact));\n      extraHeaders.push('Content-Type: application/sdp');\n\n      if (this._sessionTimers.enabled) {\n        extraHeaders.push(\"Session-Expires: \".concat(this._sessionTimers.defaultExpires).concat(this._ua.configuration.session_timers_force_refresher ? ';refresher=uac' : ''));\n      }\n\n      this._request = new SIPMessage.InitialOutgoingInviteRequest(target, this._ua, requestParams, extraHeaders);\n      this._id = this._request.call_id + this._from_tag; // Create a new RTCPeerConnection instance.\n\n      this._createRTCConnection(pcConfig, rtcConstraints); // Set internal properties.\n\n\n      this._direction = 'outgoing';\n      this._local_identity = this._request.from;\n      this._remote_identity = this._request.to; // User explicitly provided a newRTCSession callback for this session.\n\n      if (initCallback) {\n        initCallback(this);\n      }\n\n      this._newRTCSession('local', this._request);\n\n      this._sendInitialRequest(mediaConstraints, rtcOfferConstraints, mediaStream);\n    }\n  }, {\n    key: \"init_incoming\",\n    value: function init_incoming(request, initCallback) {\n      var _this2 = this;\n\n      logger.debug('init_incoming()');\n      var expires;\n      var contentType = request.hasHeader('Content-Type') ? request.getHeader('Content-Type').toLowerCase() : undefined; // Check body and content type.\n\n      if (request.body && contentType !== 'application/sdp') {\n        request.reply(415);\n        return;\n      } // Session parameter initialization.\n\n\n      this._status = C.STATUS_INVITE_RECEIVED;\n      this._from_tag = request.from_tag;\n      this._id = request.call_id + this._from_tag;\n      this._request = request;\n      this._contact = this._ua.contact.toString(); // Get the Expires header value if exists.\n\n      if (request.hasHeader('expires')) {\n        expires = request.getHeader('expires') * 1000;\n      }\n      /* Set the to_tag before\n       * replying a response code that will create a dialog.\n       */\n\n\n      request.to_tag = Utils.newTag(); // An error on dialog creation will fire 'failed' event.\n\n      if (!this._createDialog(request, 'UAS', true)) {\n        request.reply(500, 'Missing Contact header field');\n        return;\n      }\n\n      if (request.body) {\n        this._late_sdp = false;\n      } else {\n        this._late_sdp = true;\n      }\n\n      this._status = C.STATUS_WAITING_FOR_ANSWER; // Set userNoAnswerTimer.\n\n      this._timers.userNoAnswerTimer = setTimeout(function () {\n        request.reply(408);\n\n        _this2._failed('local', null, JsSIP_C.causes.NO_ANSWER);\n      }, this._ua.configuration.no_answer_timeout);\n      /* Set expiresTimer\n       * RFC3261 13.3.1\n       */\n\n      if (expires) {\n        this._timers.expiresTimer = setTimeout(function () {\n          if (_this2._status === C.STATUS_WAITING_FOR_ANSWER) {\n            request.reply(487);\n\n            _this2._failed('system', null, JsSIP_C.causes.EXPIRES);\n          }\n        }, expires);\n      } // Set internal properties.\n\n\n      this._direction = 'incoming';\n      this._local_identity = request.to;\n      this._remote_identity = request.from; // A init callback was specifically defined.\n\n      if (initCallback) {\n        initCallback(this);\n      } // Fire 'newRTCSession' event.\n\n\n      this._newRTCSession('remote', request); // The user may have rejected the call in the 'newRTCSession' event.\n\n\n      if (this._status === C.STATUS_TERMINATED) {\n        return;\n      } // Reply 180.\n\n\n      request.reply(180, null, [\"Contact: \".concat(this._contact)]); // Fire 'progress' event.\n      // TODO: Document that 'response' field in 'progress' event is null for incoming calls.\n\n      this._progress('local', null);\n    }\n    /**\n     * Answer the call.\n     */\n\n  }, {\n    key: \"answer\",\n    value: function answer() {\n      var _this3 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      logger.debug('answer()');\n      var request = this._request;\n      var extraHeaders = Utils.cloneArray(options.extraHeaders);\n      var mediaConstraints = Utils.cloneObject(options.mediaConstraints);\n      var mediaStream = options.mediaStream || null;\n      var pcConfig = Utils.cloneObject(options.pcConfig, {\n        iceServers: []\n      });\n      var rtcConstraints = options.rtcConstraints || null;\n      var rtcAnswerConstraints = options.rtcAnswerConstraints || null;\n      var rtcOfferConstraints = Utils.cloneObject(options.rtcOfferConstraints);\n      var tracks;\n      var peerHasAudioLine = false;\n      var peerHasVideoLine = false;\n      var peerOffersFullAudio = false;\n      var peerOffersFullVideo = false;\n      this._rtcAnswerConstraints = rtcAnswerConstraints;\n      this._rtcOfferConstraints = options.rtcOfferConstraints || null;\n      this._data = options.data || this._data; // Check Session Direction and Status.\n\n      if (this._direction !== 'incoming') {\n        throw new Exceptions.NotSupportedError('\"answer\" not supported for outgoing RTCSession');\n      } // Check Session status.\n\n\n      if (this._status !== C.STATUS_WAITING_FOR_ANSWER) {\n        throw new Exceptions.InvalidStateError(this._status);\n      } // Session Timers.\n\n\n      if (this._sessionTimers.enabled) {\n        if (Utils.isDecimal(options.sessionTimersExpires)) {\n          if (options.sessionTimersExpires >= JsSIP_C.MIN_SESSION_EXPIRES) {\n            this._sessionTimers.defaultExpires = options.sessionTimersExpires;\n          } else {\n            this._sessionTimers.defaultExpires = JsSIP_C.SESSION_EXPIRES;\n          }\n        }\n      }\n\n      this._status = C.STATUS_ANSWERED; // An error on dialog creation will fire 'failed' event.\n\n      if (!this._createDialog(request, 'UAS')) {\n        request.reply(500, 'Error creating dialog');\n        return;\n      }\n\n      clearTimeout(this._timers.userNoAnswerTimer);\n      extraHeaders.unshift(\"Contact: \".concat(this._contact)); // Determine incoming media from incoming SDP offer (if any).\n\n      var sdp = request.parseSDP(); // Make sure sdp.media is an array, not the case if there is only one media.\n\n      if (!Array.isArray(sdp.media)) {\n        sdp.media = [sdp.media];\n      } // Go through all medias in SDP to find offered capabilities to answer with.\n\n\n      var _iterator = _createForOfIteratorHelper(sdp.media),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var m = _step.value;\n\n          if (m.type === 'audio') {\n            peerHasAudioLine = true;\n\n            if (!m.direction || m.direction === 'sendrecv') {\n              peerOffersFullAudio = true;\n            }\n          }\n\n          if (m.type === 'video') {\n            peerHasVideoLine = true;\n\n            if (!m.direction || m.direction === 'sendrecv') {\n              peerOffersFullVideo = true;\n            }\n          }\n        } // Remove audio from mediaStream if suggested by mediaConstraints.\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (mediaStream && mediaConstraints.audio === false) {\n        tracks = mediaStream.getAudioTracks();\n\n        var _iterator2 = _createForOfIteratorHelper(tracks),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var track = _step2.value;\n            mediaStream.removeTrack(track);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } // Remove video from mediaStream if suggested by mediaConstraints.\n\n\n      if (mediaStream && mediaConstraints.video === false) {\n        tracks = mediaStream.getVideoTracks();\n\n        var _iterator3 = _createForOfIteratorHelper(tracks),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _track = _step3.value;\n            mediaStream.removeTrack(_track);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      } // Set audio constraints based on incoming stream if not supplied.\n\n\n      if (!mediaStream && mediaConstraints.audio === undefined) {\n        mediaConstraints.audio = peerOffersFullAudio;\n      } // Set video constraints based on incoming stream if not supplied.\n\n\n      if (!mediaStream && mediaConstraints.video === undefined) {\n        mediaConstraints.video = peerOffersFullVideo;\n      } // Don't ask for audio if the incoming offer has no audio section.\n\n\n      if (!mediaStream && !peerHasAudioLine && !rtcOfferConstraints.offerToReceiveAudio) {\n        mediaConstraints.audio = false;\n      } // Don't ask for video if the incoming offer has no video section.\n\n\n      if (!mediaStream && !peerHasVideoLine && !rtcOfferConstraints.offerToReceiveVideo) {\n        mediaConstraints.video = false;\n      } // Create a new RTCPeerConnection instance.\n      // TODO: This may throw an error, should react.\n\n\n      this._createRTCConnection(pcConfig, rtcConstraints);\n\n      Promise.resolve() // Handle local MediaStream.\n      .then(function () {\n        // A local MediaStream is given, use it.\n        if (mediaStream) {\n          return mediaStream;\n        } // Audio and/or video requested, prompt getUserMedia.\n        else if (mediaConstraints.audio || mediaConstraints.video) {\n            _this3._localMediaStreamLocallyGenerated = true;\n            return navigator.mediaDevices.getUserMedia(mediaConstraints)[\"catch\"](function (error) {\n              if (_this3._status === C.STATUS_TERMINATED) {\n                throw new Error('terminated');\n              }\n\n              request.reply(480);\n\n              _this3._failed('local', null, JsSIP_C.causes.USER_DENIED_MEDIA_ACCESS);\n\n              logger.warn('emit \"getusermediafailed\" [error:%o]', error);\n\n              _this3.emit('getusermediafailed', error);\n\n              throw new Error('getUserMedia() failed');\n            });\n          }\n      }) // Attach MediaStream to RTCPeerconnection.\n      .then(function (stream) {\n        if (_this3._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        _this3._localMediaStream = stream;\n\n        if (stream) {\n          stream.getTracks().forEach(function (track) {\n            _this3._connection.addTrack(track, stream);\n          });\n        }\n      }) // Set remote description.\n      .then(function () {\n        if (_this3._late_sdp) {\n          return;\n        }\n\n        var e = {\n          originator: 'remote',\n          type: 'offer',\n          sdp: request.body\n        };\n        logger.debug('emit \"sdp\"');\n\n        _this3.emit('sdp', e);\n\n        var offer = new RTCSessionDescription({\n          type: 'offer',\n          sdp: e.sdp\n        });\n        _this3._connectionPromiseQueue = _this3._connectionPromiseQueue.then(function () {\n          return _this3._connection.setRemoteDescription(offer);\n        })[\"catch\"](function (error) {\n          request.reply(488);\n\n          _this3._failed('system', null, JsSIP_C.causes.WEBRTC_ERROR);\n\n          logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n          _this3.emit('peerconnection:setremotedescriptionfailed', error);\n\n          throw new Error('peerconnection.setRemoteDescription() failed');\n        });\n        return _this3._connectionPromiseQueue;\n      }) // Create local description.\n      .then(function () {\n        if (_this3._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        } // TODO: Is this event already useful?\n\n\n        _this3._connecting(request);\n\n        if (!_this3._late_sdp) {\n          return _this3._createLocalDescription('answer', rtcAnswerConstraints)[\"catch\"](function () {\n            request.reply(500);\n            throw new Error('_createLocalDescription() failed');\n          });\n        } else {\n          return _this3._createLocalDescription('offer', _this3._rtcOfferConstraints)[\"catch\"](function () {\n            request.reply(500);\n            throw new Error('_createLocalDescription() failed');\n          });\n        }\n      }) // Send reply.\n      .then(function (desc) {\n        if (_this3._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        _this3._handleSessionTimersInIncomingRequest(request, extraHeaders);\n\n        request.reply(200, null, extraHeaders, desc, function () {\n          _this3._status = C.STATUS_WAITING_FOR_ACK;\n\n          _this3._setInvite2xxTimer(request, desc);\n\n          _this3._setACKTimer();\n\n          _this3._accepted('local');\n        }, function () {\n          _this3._failed('system', null, JsSIP_C.causes.CONNECTION_ERROR);\n        });\n      })[\"catch\"](function (error) {\n        if (_this3._status === C.STATUS_TERMINATED) {\n          return;\n        }\n\n        logger.warn(error);\n      });\n    }\n    /**\n     * Terminate the call.\n     */\n\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      var _this4 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      logger.debug('terminate()');\n      var cause = options.cause || JsSIP_C.causes.BYE;\n      var extraHeaders = Utils.cloneArray(options.extraHeaders);\n      var body = options.body;\n      var cancel_reason;\n      var status_code = options.status_code;\n      var reason_phrase = options.reason_phrase; // Check Session Status.\n\n      if (this._status === C.STATUS_TERMINATED) {\n        throw new Exceptions.InvalidStateError(this._status);\n      }\n\n      switch (this._status) {\n        // - UAC -\n        case C.STATUS_NULL:\n        case C.STATUS_INVITE_SENT:\n        case C.STATUS_1XX_RECEIVED:\n          logger.debug('canceling session');\n\n          if (status_code && (status_code < 200 || status_code >= 700)) {\n            throw new TypeError(\"Invalid status_code: \".concat(status_code));\n          } else if (status_code) {\n            reason_phrase = reason_phrase || JsSIP_C.REASON_PHRASE[status_code] || '';\n            cancel_reason = \"SIP ;cause=\".concat(status_code, \" ;text=\\\"\").concat(reason_phrase, \"\\\"\");\n          } // Check Session Status.\n\n\n          if (this._status === C.STATUS_NULL || this._status === C.STATUS_INVITE_SENT) {\n            this._is_canceled = true;\n            this._cancel_reason = cancel_reason;\n          } else if (this._status === C.STATUS_1XX_RECEIVED) {\n            this._request.cancel(cancel_reason);\n          }\n\n          this._status = C.STATUS_CANCELED;\n\n          this._failed('local', null, JsSIP_C.causes.CANCELED);\n\n          break;\n        // - UAS -\n\n        case C.STATUS_WAITING_FOR_ANSWER:\n        case C.STATUS_ANSWERED:\n          logger.debug('rejecting session');\n          status_code = status_code || 480;\n\n          if (status_code < 300 || status_code >= 700) {\n            throw new TypeError(\"Invalid status_code: \".concat(status_code));\n          }\n\n          this._request.reply(status_code, reason_phrase, extraHeaders, body);\n\n          this._failed('local', null, JsSIP_C.causes.REJECTED);\n\n          break;\n\n        case C.STATUS_WAITING_FOR_ACK:\n        case C.STATUS_CONFIRMED:\n          logger.debug('terminating session');\n          reason_phrase = options.reason_phrase || JsSIP_C.REASON_PHRASE[status_code] || '';\n\n          if (status_code && (status_code < 200 || status_code >= 700)) {\n            throw new TypeError(\"Invalid status_code: \".concat(status_code));\n          } else if (status_code) {\n            extraHeaders.push(\"Reason: SIP ;cause=\".concat(status_code, \"; text=\\\"\").concat(reason_phrase, \"\\\"\"));\n          }\n          /* RFC 3261 section 15 (Terminating a session):\n            *\n            * \"...the callee's UA MUST NOT send a BYE on a confirmed dialog\n            * until it has received an ACK for its 2xx response or until the server\n            * transaction times out.\"\n            */\n\n\n          if (this._status === C.STATUS_WAITING_FOR_ACK && this._direction === 'incoming' && this._request.server_transaction.state !== Transactions.C.STATUS_TERMINATED) {\n            // Save the dialog for later restoration.\n            var dialog = this._dialog; // Send the BYE as soon as the ACK is received...\n\n            this.receiveRequest = function (_ref) {\n              var method = _ref.method;\n\n              if (method === JsSIP_C.ACK) {\n                _this4.sendRequest(JsSIP_C.BYE, {\n                  extraHeaders: extraHeaders,\n                  body: body\n                });\n\n                dialog.terminate();\n              }\n            }; // .., or when the INVITE transaction times out\n\n\n            this._request.server_transaction.on('stateChanged', function () {\n              if (_this4._request.server_transaction.state === Transactions.C.STATUS_TERMINATED) {\n                _this4.sendRequest(JsSIP_C.BYE, {\n                  extraHeaders: extraHeaders,\n                  body: body\n                });\n\n                dialog.terminate();\n              }\n            });\n\n            this._ended('local', null, cause); // Restore the dialog into 'this' in order to be able to send the in-dialog BYE :-).\n\n\n            this._dialog = dialog; // Restore the dialog into 'ua' so the ACK can reach 'this' session.\n\n            this._ua.newDialog(dialog);\n          } else {\n            this.sendRequest(JsSIP_C.BYE, {\n              extraHeaders: extraHeaders,\n              body: body\n            });\n\n            this._ended('local', null, cause);\n          }\n\n      }\n    }\n  }, {\n    key: \"sendDTMF\",\n    value: function sendDTMF(tones) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      logger.debug('sendDTMF() | tones: %s', tones);\n      var position = 0;\n      var duration = options.duration || null;\n      var interToneGap = options.interToneGap || null;\n      var transportType = options.transportType || JsSIP_C.DTMF_TRANSPORT.INFO;\n\n      if (tones === undefined) {\n        throw new TypeError('Not enough arguments');\n      } // Check Session Status.\n\n\n      if (this._status !== C.STATUS_CONFIRMED && this._status !== C.STATUS_WAITING_FOR_ACK) {\n        throw new Exceptions.InvalidStateError(this._status);\n      } // Check Transport type.\n\n\n      if (transportType !== JsSIP_C.DTMF_TRANSPORT.INFO && transportType !== JsSIP_C.DTMF_TRANSPORT.RFC2833) {\n        throw new TypeError(\"invalid transportType: \".concat(transportType));\n      } // Convert to string.\n\n\n      if (typeof tones === 'number') {\n        tones = tones.toString();\n      } // Check tones.\n\n\n      if (!tones || typeof tones !== 'string' || !tones.match(/^[0-9A-DR#*,]+$/i)) {\n        throw new TypeError(\"Invalid tones: \".concat(tones));\n      } // Check duration.\n\n\n      if (duration && !Utils.isDecimal(duration)) {\n        throw new TypeError(\"Invalid tone duration: \".concat(duration));\n      } else if (!duration) {\n        duration = RTCSession_DTMF.C.DEFAULT_DURATION;\n      } else if (duration < RTCSession_DTMF.C.MIN_DURATION) {\n        logger.debug(\"\\\"duration\\\" value is lower than the minimum allowed, setting it to \".concat(RTCSession_DTMF.C.MIN_DURATION, \" milliseconds\"));\n        duration = RTCSession_DTMF.C.MIN_DURATION;\n      } else if (duration > RTCSession_DTMF.C.MAX_DURATION) {\n        logger.debug(\"\\\"duration\\\" value is greater than the maximum allowed, setting it to \".concat(RTCSession_DTMF.C.MAX_DURATION, \" milliseconds\"));\n        duration = RTCSession_DTMF.C.MAX_DURATION;\n      } else {\n        duration = Math.abs(duration);\n      }\n\n      options.duration = duration; // Check interToneGap.\n\n      if (interToneGap && !Utils.isDecimal(interToneGap)) {\n        throw new TypeError(\"Invalid interToneGap: \".concat(interToneGap));\n      } else if (!interToneGap) {\n        interToneGap = RTCSession_DTMF.C.DEFAULT_INTER_TONE_GAP;\n      } else if (interToneGap < RTCSession_DTMF.C.MIN_INTER_TONE_GAP) {\n        logger.debug(\"\\\"interToneGap\\\" value is lower than the minimum allowed, setting it to \".concat(RTCSession_DTMF.C.MIN_INTER_TONE_GAP, \" milliseconds\"));\n        interToneGap = RTCSession_DTMF.C.MIN_INTER_TONE_GAP;\n      } else {\n        interToneGap = Math.abs(interToneGap);\n      } // RFC2833. Let RTCDTMFSender enqueue the DTMFs.\n\n\n      if (transportType === JsSIP_C.DTMF_TRANSPORT.RFC2833) {\n        // Send DTMF in current audio RTP stream.\n        var sender = this._getDTMFRTPSender();\n\n        if (sender) {\n          // Add remaining buffered tones.\n          tones = sender.toneBuffer + tones; // Insert tones.\n\n          sender.insertDTMF(tones, duration, interToneGap);\n        }\n\n        return;\n      }\n\n      if (this._tones) {\n        // Tones are already queued, just add to the queue.\n        this._tones += tones;\n        return;\n      }\n\n      this._tones = tones; // Send the first tone.\n\n      _sendDTMF.call(this);\n\n      function _sendDTMF() {\n        var _this5 = this;\n\n        var timeout;\n\n        if (this._status === C.STATUS_TERMINATED || !this._tones || position >= this._tones.length) {\n          // Stop sending DTMF.\n          this._tones = null;\n          return;\n        }\n\n        var tone = this._tones[position];\n        position += 1;\n\n        if (tone === ',') {\n          timeout = 2000;\n        } else {\n          // Send DTMF via SIP INFO messages.\n          var dtmf = new RTCSession_DTMF(this);\n          options.eventHandlers = {\n            onFailed: function onFailed() {\n              _this5._tones = null;\n            }\n          };\n          dtmf.send(tone, options);\n          timeout = duration + interToneGap;\n        } // Set timeout for the next tone.\n\n\n        setTimeout(_sendDTMF.bind(this), timeout);\n      }\n    }\n  }, {\n    key: \"sendInfo\",\n    value: function sendInfo(contentType, body) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      logger.debug('sendInfo()'); // Check Session Status.\n\n      if (this._status !== C.STATUS_CONFIRMED && this._status !== C.STATUS_WAITING_FOR_ACK) {\n        throw new Exceptions.InvalidStateError(this._status);\n      }\n\n      var info = new RTCSession_Info(this);\n      info.send(contentType, body, options);\n    }\n    /**\n     * Mute\n     */\n\n  }, {\n    key: \"mute\",\n    value: function mute() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        audio: true,\n        video: false\n      };\n      logger.debug('mute()');\n      var audioMuted = false,\n          videoMuted = false;\n\n      if (this._audioMuted === false && options.audio) {\n        audioMuted = true;\n        this._audioMuted = true;\n\n        this._toggleMuteAudio(true);\n      }\n\n      if (this._videoMuted === false && options.video) {\n        videoMuted = true;\n        this._videoMuted = true;\n\n        this._toggleMuteVideo(true);\n      }\n\n      if (audioMuted === true || videoMuted === true) {\n        this._onmute({\n          audio: audioMuted,\n          video: videoMuted\n        });\n      }\n    }\n    /**\n     * Unmute\n     */\n\n  }, {\n    key: \"unmute\",\n    value: function unmute() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        audio: true,\n        video: true\n      };\n      logger.debug('unmute()');\n      var audioUnMuted = false,\n          videoUnMuted = false;\n\n      if (this._audioMuted === true && options.audio) {\n        audioUnMuted = true;\n        this._audioMuted = false;\n\n        if (this._localHold === false) {\n          this._toggleMuteAudio(false);\n        }\n      }\n\n      if (this._videoMuted === true && options.video) {\n        videoUnMuted = true;\n        this._videoMuted = false;\n\n        if (this._localHold === false) {\n          this._toggleMuteVideo(false);\n        }\n      }\n\n      if (audioUnMuted === true || videoUnMuted === true) {\n        this._onunmute({\n          audio: audioUnMuted,\n          video: videoUnMuted\n        });\n      }\n    }\n    /**\n     * Hold\n     */\n\n  }, {\n    key: \"hold\",\n    value: function hold() {\n      var _this6 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var done = arguments.length > 1 ? arguments[1] : undefined;\n      logger.debug('hold()');\n\n      if (this._status !== C.STATUS_WAITING_FOR_ACK && this._status !== C.STATUS_CONFIRMED) {\n        return false;\n      }\n\n      if (this._localHold === true) {\n        return false;\n      }\n\n      if (!this._isReadyToReOffer()) {\n        return false;\n      }\n\n      this._localHold = true;\n\n      this._onhold('local');\n\n      var eventHandlers = {\n        succeeded: function succeeded() {\n          if (done) {\n            done();\n          }\n        },\n        failed: function failed() {\n          _this6.terminate({\n            cause: JsSIP_C.causes.WEBRTC_ERROR,\n            status_code: 500,\n            reason_phrase: 'Hold Failed'\n          });\n        }\n      };\n\n      if (options.useUpdate) {\n        this._sendUpdate({\n          sdpOffer: true,\n          eventHandlers: eventHandlers,\n          extraHeaders: options.extraHeaders\n        });\n      } else {\n        this._sendReinvite({\n          eventHandlers: eventHandlers,\n          extraHeaders: options.extraHeaders\n        });\n      }\n\n      return true;\n    }\n  }, {\n    key: \"unhold\",\n    value: function unhold() {\n      var _this7 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var done = arguments.length > 1 ? arguments[1] : undefined;\n      logger.debug('unhold()');\n\n      if (this._status !== C.STATUS_WAITING_FOR_ACK && this._status !== C.STATUS_CONFIRMED) {\n        return false;\n      }\n\n      if (this._localHold === false) {\n        return false;\n      }\n\n      if (!this._isReadyToReOffer()) {\n        return false;\n      }\n\n      this._localHold = false;\n\n      this._onunhold('local');\n\n      var eventHandlers = {\n        succeeded: function succeeded() {\n          if (done) {\n            done();\n          }\n        },\n        failed: function failed() {\n          _this7.terminate({\n            cause: JsSIP_C.causes.WEBRTC_ERROR,\n            status_code: 500,\n            reason_phrase: 'Unhold Failed'\n          });\n        }\n      };\n\n      if (options.useUpdate) {\n        this._sendUpdate({\n          sdpOffer: true,\n          eventHandlers: eventHandlers,\n          extraHeaders: options.extraHeaders\n        });\n      } else {\n        this._sendReinvite({\n          eventHandlers: eventHandlers,\n          extraHeaders: options.extraHeaders\n        });\n      }\n\n      return true;\n    }\n  }, {\n    key: \"renegotiate\",\n    value: function renegotiate() {\n      var _this8 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var done = arguments.length > 1 ? arguments[1] : undefined;\n      logger.debug('renegotiate()');\n      var rtcOfferConstraints = options.rtcOfferConstraints || null;\n\n      if (this._status !== C.STATUS_WAITING_FOR_ACK && this._status !== C.STATUS_CONFIRMED) {\n        return false;\n      }\n\n      if (!this._isReadyToReOffer()) {\n        return false;\n      }\n\n      var eventHandlers = {\n        succeeded: function succeeded() {\n          if (done) {\n            done();\n          }\n        },\n        failed: function failed() {\n          _this8.terminate({\n            cause: JsSIP_C.causes.WEBRTC_ERROR,\n            status_code: 500,\n            reason_phrase: 'Media Renegotiation Failed'\n          });\n        }\n      };\n\n      this._setLocalMediaStatus();\n\n      if (options.useUpdate) {\n        this._sendUpdate({\n          sdpOffer: true,\n          eventHandlers: eventHandlers,\n          rtcOfferConstraints: rtcOfferConstraints,\n          extraHeaders: options.extraHeaders\n        });\n      } else {\n        this._sendReinvite({\n          eventHandlers: eventHandlers,\n          rtcOfferConstraints: rtcOfferConstraints,\n          extraHeaders: options.extraHeaders\n        });\n      }\n\n      return true;\n    }\n    /**\n     * Refer\n     */\n\n  }, {\n    key: \"refer\",\n    value: function refer(target, options) {\n      var _this9 = this;\n\n      logger.debug('refer()');\n      var originalTarget = target;\n\n      if (this._status !== C.STATUS_WAITING_FOR_ACK && this._status !== C.STATUS_CONFIRMED) {\n        return false;\n      } // Check target validity.\n\n\n      target = this._ua.normalizeTarget(target);\n\n      if (!target) {\n        throw new TypeError(\"Invalid target: \".concat(originalTarget));\n      }\n\n      var referSubscriber = new RTCSession_ReferSubscriber(this);\n      referSubscriber.sendRefer(target, options); // Store in the map.\n\n      var id = referSubscriber.id;\n      this._referSubscribers[id] = referSubscriber; // Listen for ending events so we can remove it from the map.\n\n      referSubscriber.on('requestFailed', function () {\n        delete _this9._referSubscribers[id];\n      });\n      referSubscriber.on('accepted', function () {\n        delete _this9._referSubscribers[id];\n      });\n      referSubscriber.on('failed', function () {\n        delete _this9._referSubscribers[id];\n      });\n      return referSubscriber;\n    }\n    /**\n     * Send a generic in-dialog Request\n     */\n\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(method, options) {\n      logger.debug('sendRequest()');\n      return this._dialog.sendRequest(method, options);\n    }\n    /**\n     * In dialog Request Reception\n     */\n\n  }, {\n    key: \"receiveRequest\",\n    value: function receiveRequest(request) {\n      var _this10 = this;\n\n      logger.debug('receiveRequest()');\n\n      if (request.method === JsSIP_C.CANCEL) {\n        /* RFC3261 15 States that a UAS may have accepted an invitation while a CANCEL\n        * was in progress and that the UAC MAY continue with the session established by\n        * any 2xx response, or MAY terminate with BYE. JsSIP does continue with the\n        * established session. So the CANCEL is processed only if the session is not yet\n        * established.\n        */\n\n        /*\n        * Terminate the whole session in case the user didn't accept (or yet send the answer)\n        * nor reject the request opening the session.\n        */\n        if (this._status === C.STATUS_WAITING_FOR_ANSWER || this._status === C.STATUS_ANSWERED) {\n          this._status = C.STATUS_CANCELED;\n\n          this._request.reply(487);\n\n          this._failed('remote', request, JsSIP_C.causes.CANCELED);\n        }\n      } else {\n        // Requests arriving here are in-dialog requests.\n        switch (request.method) {\n          case JsSIP_C.ACK:\n            if (this._status !== C.STATUS_WAITING_FOR_ACK) {\n              return;\n            } // Update signaling status.\n\n\n            this._status = C.STATUS_CONFIRMED;\n            clearTimeout(this._timers.ackTimer);\n            clearTimeout(this._timers.invite2xxTimer);\n\n            if (this._late_sdp) {\n              if (!request.body) {\n                this.terminate({\n                  cause: JsSIP_C.causes.MISSING_SDP,\n                  status_code: 400\n                });\n                break;\n              }\n\n              var e = {\n                originator: 'remote',\n                type: 'answer',\n                sdp: request.body\n              };\n              logger.debug('emit \"sdp\"');\n              this.emit('sdp', e);\n              var answer = new RTCSessionDescription({\n                type: 'answer',\n                sdp: e.sdp\n              });\n              this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n                return _this10._connection.setRemoteDescription(answer);\n              }).then(function () {\n                if (!_this10._is_confirmed) {\n                  _this10._confirmed('remote', request);\n                }\n              })[\"catch\"](function (error) {\n                _this10.terminate({\n                  cause: JsSIP_C.causes.BAD_MEDIA_DESCRIPTION,\n                  status_code: 488\n                });\n\n                logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n                _this10.emit('peerconnection:setremotedescriptionfailed', error);\n              });\n            } else if (!this._is_confirmed) {\n              this._confirmed('remote', request);\n            }\n\n            break;\n\n          case JsSIP_C.BYE:\n            if (this._status === C.STATUS_CONFIRMED || this._status === C.STATUS_WAITING_FOR_ACK) {\n              request.reply(200);\n\n              this._ended('remote', request, JsSIP_C.causes.BYE);\n            } else if (this._status === C.STATUS_INVITE_RECEIVED || this._status === C.STATUS_WAITING_FOR_ANSWER) {\n              request.reply(200);\n\n              this._request.reply(487, 'BYE Received');\n\n              this._ended('remote', request, JsSIP_C.causes.BYE);\n            } else {\n              request.reply(403, 'Wrong Status');\n            }\n\n            break;\n\n          case JsSIP_C.INVITE:\n            if (this._status === C.STATUS_CONFIRMED) {\n              if (request.hasHeader('replaces')) {\n                this._receiveReplaces(request);\n              } else {\n                this._receiveReinvite(request);\n              }\n            } else {\n              request.reply(403, 'Wrong Status');\n            }\n\n            break;\n\n          case JsSIP_C.INFO:\n            if (this._status === C.STATUS_1XX_RECEIVED || this._status === C.STATUS_WAITING_FOR_ANSWER || this._status === C.STATUS_ANSWERED || this._status === C.STATUS_WAITING_FOR_ACK || this._status === C.STATUS_CONFIRMED) {\n              var contentType = request.hasHeader('Content-Type') ? request.getHeader('Content-Type').toLowerCase() : undefined;\n\n              if (contentType && contentType.match(/^application\\/dtmf-relay/i)) {\n                new RTCSession_DTMF(this).init_incoming(request);\n              } else if (contentType !== undefined) {\n                new RTCSession_Info(this).init_incoming(request);\n              } else {\n                request.reply(415);\n              }\n            } else {\n              request.reply(403, 'Wrong Status');\n            }\n\n            break;\n\n          case JsSIP_C.UPDATE:\n            if (this._status === C.STATUS_CONFIRMED) {\n              this._receiveUpdate(request);\n            } else {\n              request.reply(403, 'Wrong Status');\n            }\n\n            break;\n\n          case JsSIP_C.REFER:\n            if (this._status === C.STATUS_CONFIRMED) {\n              this._receiveRefer(request);\n            } else {\n              request.reply(403, 'Wrong Status');\n            }\n\n            break;\n\n          case JsSIP_C.NOTIFY:\n            if (this._status === C.STATUS_CONFIRMED) {\n              this._receiveNotify(request);\n            } else {\n              request.reply(403, 'Wrong Status');\n            }\n\n            break;\n\n          default:\n            request.reply(501);\n        }\n      }\n    }\n    /**\n     * Session Callbacks\n     */\n\n  }, {\n    key: \"onTransportError\",\n    value: function onTransportError() {\n      logger.warn('onTransportError()');\n\n      if (this._status !== C.STATUS_TERMINATED) {\n        this.terminate({\n          status_code: 500,\n          reason_phrase: JsSIP_C.causes.CONNECTION_ERROR,\n          cause: JsSIP_C.causes.CONNECTION_ERROR\n        });\n      }\n    }\n  }, {\n    key: \"onRequestTimeout\",\n    value: function onRequestTimeout() {\n      logger.warn('onRequestTimeout()');\n\n      if (this._status !== C.STATUS_TERMINATED) {\n        this.terminate({\n          status_code: 408,\n          reason_phrase: JsSIP_C.causes.REQUEST_TIMEOUT,\n          cause: JsSIP_C.causes.REQUEST_TIMEOUT\n        });\n      }\n    }\n  }, {\n    key: \"onDialogError\",\n    value: function onDialogError() {\n      logger.warn('onDialogError()');\n\n      if (this._status !== C.STATUS_TERMINATED) {\n        this.terminate({\n          status_code: 500,\n          reason_phrase: JsSIP_C.causes.DIALOG_ERROR,\n          cause: JsSIP_C.causes.DIALOG_ERROR\n        });\n      }\n    } // Called from DTMF handler.\n\n  }, {\n    key: \"newDTMF\",\n    value: function newDTMF(data) {\n      logger.debug('newDTMF()');\n      this.emit('newDTMF', data);\n    } // Called from Info handler.\n\n  }, {\n    key: \"newInfo\",\n    value: function newInfo(data) {\n      logger.debug('newInfo()');\n      this.emit('newInfo', data);\n    }\n    /**\n     * Check if RTCSession is ready for an outgoing re-INVITE or UPDATE with SDP.\n     */\n\n  }, {\n    key: \"_isReadyToReOffer\",\n    value: function _isReadyToReOffer() {\n      if (!this._rtcReady) {\n        logger.debug('_isReadyToReOffer() | internal WebRTC status not ready');\n        return false;\n      } // No established yet.\n\n\n      if (!this._dialog) {\n        logger.debug('_isReadyToReOffer() | session not established yet');\n        return false;\n      } // Another INVITE transaction is in progress.\n\n\n      if (this._dialog.uac_pending_reply === true || this._dialog.uas_pending_reply === true) {\n        logger.debug('_isReadyToReOffer() | there is another INVITE/UPDATE transaction in progress');\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_close\",\n    value: function _close() {\n      logger.debug('close()'); // Close local MediaStream if it was not given by the user.\n\n      if (this._localMediaStream && this._localMediaStreamLocallyGenerated) {\n        logger.debug('close() | closing local MediaStream');\n        Utils.closeMediaStream(this._localMediaStream);\n      }\n\n      if (this._status === C.STATUS_TERMINATED) {\n        return;\n      }\n\n      this._status = C.STATUS_TERMINATED; // Terminate RTC.\n\n      if (this._connection) {\n        try {\n          this._connection.close();\n        } catch (error) {\n          logger.warn('close() | error closing the RTCPeerConnection: %o', error);\n        }\n      } // Terminate signaling.\n      // Clear SIP timers.\n\n\n      for (var timer in this._timers) {\n        if (Object.prototype.hasOwnProperty.call(this._timers, timer)) {\n          clearTimeout(this._timers[timer]);\n        }\n      } // Clear Session Timers.\n\n\n      clearTimeout(this._sessionTimers.timer); // Terminate confirmed dialog.\n\n      if (this._dialog) {\n        this._dialog.terminate();\n\n        delete this._dialog;\n      } // Terminate early dialogs.\n\n\n      for (var dialog in this._earlyDialogs) {\n        if (Object.prototype.hasOwnProperty.call(this._earlyDialogs, dialog)) {\n          this._earlyDialogs[dialog].terminate();\n\n          delete this._earlyDialogs[dialog];\n        }\n      } // Terminate REFER subscribers.\n\n\n      for (var subscriber in this._referSubscribers) {\n        if (Object.prototype.hasOwnProperty.call(this._referSubscribers, subscriber)) {\n          delete this._referSubscribers[subscriber];\n        }\n      }\n\n      this._ua.destroyRTCSession(this);\n    }\n    /**\n     * Private API.\n     */\n\n    /**\n     * RFC3261 13.3.1.4\n     * Response retransmissions cannot be accomplished by transaction layer\n     *  since it is destroyed when receiving the first 2xx answer\n     */\n\n  }, {\n    key: \"_setInvite2xxTimer\",\n    value: function _setInvite2xxTimer(request, body) {\n      var timeout = Timers.T1;\n\n      function invite2xxRetransmission() {\n        if (this._status !== C.STATUS_WAITING_FOR_ACK) {\n          return;\n        }\n\n        request.reply(200, null, [\"Contact: \".concat(this._contact)], body);\n\n        if (timeout < Timers.T2) {\n          timeout = timeout * 2;\n\n          if (timeout > Timers.T2) {\n            timeout = Timers.T2;\n          }\n        }\n\n        this._timers.invite2xxTimer = setTimeout(invite2xxRetransmission.bind(this), timeout);\n      }\n\n      this._timers.invite2xxTimer = setTimeout(invite2xxRetransmission.bind(this), timeout);\n    }\n    /**\n     * RFC3261 14.2\n     * If a UAS generates a 2xx response and never receives an ACK,\n     *  it SHOULD generate a BYE to terminate the dialog.\n     */\n\n  }, {\n    key: \"_setACKTimer\",\n    value: function _setACKTimer() {\n      var _this11 = this;\n\n      this._timers.ackTimer = setTimeout(function () {\n        if (_this11._status === C.STATUS_WAITING_FOR_ACK) {\n          logger.debug('no ACK received, terminating the session');\n          clearTimeout(_this11._timers.invite2xxTimer);\n\n          _this11.sendRequest(JsSIP_C.BYE);\n\n          _this11._ended('remote', null, JsSIP_C.causes.NO_ACK);\n        }\n      }, Timers.TIMER_H);\n    }\n  }, {\n    key: \"_createRTCConnection\",\n    value: function _createRTCConnection(pcConfig, rtcConstraints) {\n      var _this12 = this;\n\n      this._connection = new RTCPeerConnection(pcConfig, rtcConstraints);\n\n      this._connection.addEventListener('iceconnectionstatechange', function () {\n        var state = _this12._connection.iceConnectionState; // TODO: Do more with different states.\n\n        if (state === 'failed') {\n          _this12.terminate({\n            cause: JsSIP_C.causes.RTP_TIMEOUT,\n            status_code: 408,\n            reason_phrase: JsSIP_C.causes.RTP_TIMEOUT\n          });\n        }\n      });\n\n      logger.debug('emit \"peerconnection\"');\n      this.emit('peerconnection', {\n        peerconnection: this._connection\n      });\n    }\n  }, {\n    key: \"_createLocalDescription\",\n    value: function _createLocalDescription(type, constraints) {\n      var _this13 = this;\n\n      logger.debug('createLocalDescription()');\n      if (type !== 'offer' && type !== 'answer') throw new Error(\"createLocalDescription() | invalid type \\\"\".concat(type, \"\\\"\"));\n      var connection = this._connection;\n      this._rtcReady = false;\n      return Promise.resolve() // Create Offer or Answer.\n      .then(function () {\n        if (type === 'offer') {\n          return connection.createOffer(constraints)[\"catch\"](function (error) {\n            logger.warn('emit \"peerconnection:createofferfailed\" [error:%o]', error);\n\n            _this13.emit('peerconnection:createofferfailed', error);\n\n            return Promise.reject(error);\n          });\n        } else {\n          return connection.createAnswer(constraints)[\"catch\"](function (error) {\n            logger.warn('emit \"peerconnection:createanswerfailed\" [error:%o]', error);\n\n            _this13.emit('peerconnection:createanswerfailed', error);\n\n            return Promise.reject(error);\n          });\n        }\n      }) // Set local description.\n      .then(function (desc) {\n        return connection.setLocalDescription(desc)[\"catch\"](function (error) {\n          _this13._rtcReady = true;\n          logger.warn('emit \"peerconnection:setlocaldescriptionfailed\" [error:%o]', error);\n\n          _this13.emit('peerconnection:setlocaldescriptionfailed', error);\n\n          return Promise.reject(error);\n        });\n      }).then(function () {\n        // Resolve right away if 'pc.iceGatheringState' is 'complete'.\n        if (connection.iceGatheringState === 'complete' && (!constraints || !constraints.iceRestart)) {\n          _this13._rtcReady = true;\n          var e = {\n            originator: 'local',\n            type: type,\n            sdp: connection.localDescription.sdp\n          };\n          logger.debug('emit \"sdp\"');\n\n          _this13.emit('sdp', e);\n\n          return Promise.resolve(e.sdp);\n        } // Add 'pc.onicencandidate' event handler to resolve on last candidate.\n\n\n        return new Promise(function (resolve) {\n          var finished = false;\n          var iceCandidateListener;\n          var iceGatheringStateListener;\n\n          var ready = function ready() {\n            connection.removeEventListener('icecandidate', iceCandidateListener);\n            connection.removeEventListener('icegatheringstatechange', iceGatheringStateListener);\n            finished = true;\n            _this13._rtcReady = true;\n            var e = {\n              originator: 'local',\n              type: type,\n              sdp: connection.localDescription.sdp\n            };\n            logger.debug('emit \"sdp\"');\n\n            _this13.emit('sdp', e);\n\n            resolve(e.sdp);\n          };\n\n          connection.addEventListener('icecandidate', iceCandidateListener = function iceCandidateListener(event) {\n            var candidate = event.candidate;\n\n            if (candidate) {\n              _this13.emit('icecandidate', {\n                candidate: candidate,\n                ready: ready\n              });\n            } else if (!finished) {\n              ready();\n            }\n          });\n          connection.addEventListener('icegatheringstatechange', iceGatheringStateListener = function iceGatheringStateListener() {\n            if (connection.iceGatheringState === 'complete' && !finished) {\n              ready();\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Dialog Management\n     */\n\n  }, {\n    key: \"_createDialog\",\n    value: function _createDialog(message, type, early) {\n      var local_tag = type === 'UAS' ? message.to_tag : message.from_tag;\n      var remote_tag = type === 'UAS' ? message.from_tag : message.to_tag;\n      var id = message.call_id + local_tag + remote_tag;\n      var early_dialog = this._earlyDialogs[id]; // Early Dialog.\n\n      if (early) {\n        if (early_dialog) {\n          return true;\n        } else {\n          early_dialog = new Dialog(this, message, type, Dialog.C.STATUS_EARLY); // Dialog has been successfully created.\n\n          if (early_dialog.error) {\n            logger.debug(early_dialog.error);\n\n            this._failed('remote', message, JsSIP_C.causes.INTERNAL_ERROR);\n\n            return false;\n          } else {\n            this._earlyDialogs[id] = early_dialog;\n            return true;\n          }\n        }\n      } // Confirmed Dialog.\n      else {\n          this._from_tag = message.from_tag;\n          this._to_tag = message.to_tag; // In case the dialog is in _early_ state, update it.\n\n          if (early_dialog) {\n            early_dialog.update(message, type);\n            this._dialog = early_dialog;\n            delete this._earlyDialogs[id];\n            return true;\n          } // Otherwise, create a _confirmed_ dialog.\n\n\n          var dialog = new Dialog(this, message, type);\n\n          if (dialog.error) {\n            logger.debug(dialog.error);\n\n            this._failed('remote', message, JsSIP_C.causes.INTERNAL_ERROR);\n\n            return false;\n          } else {\n            this._dialog = dialog;\n            return true;\n          }\n        }\n    }\n    /**\n     * In dialog INVITE Reception\n     */\n\n  }, {\n    key: \"_receiveReinvite\",\n    value: function _receiveReinvite(request) {\n      var _this14 = this;\n\n      logger.debug('receiveReinvite()');\n      var contentType = request.hasHeader('Content-Type') ? request.getHeader('Content-Type').toLowerCase() : undefined;\n      var data = {\n        request: request,\n        callback: undefined,\n        reject: reject.bind(this)\n      };\n      var rejected = false;\n\n      function reject() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        rejected = true;\n        var status_code = options.status_code || 403;\n        var reason_phrase = options.reason_phrase || '';\n        var extraHeaders = Utils.cloneArray(options.extraHeaders);\n\n        if (this._status !== C.STATUS_CONFIRMED) {\n          return false;\n        }\n\n        if (status_code < 300 || status_code >= 700) {\n          throw new TypeError(\"Invalid status_code: \".concat(status_code));\n        }\n\n        request.reply(status_code, reason_phrase, extraHeaders);\n      } // Emit 'reinvite'.\n\n\n      this.emit('reinvite', data);\n\n      if (rejected) {\n        return;\n      }\n\n      this._late_sdp = false; // Request without SDP.\n\n      if (!request.body) {\n        this._late_sdp = true;\n\n        if (this._remoteHold) {\n          this._remoteHold = false;\n\n          this._onunhold('remote');\n        }\n\n        this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n          return _this14._createLocalDescription('offer', _this14._rtcOfferConstraints);\n        }).then(function (sdp) {\n          sendAnswer.call(_this14, sdp);\n        })[\"catch\"](function () {\n          request.reply(500);\n        });\n        return;\n      } // Request with SDP.\n\n\n      if (contentType !== 'application/sdp') {\n        logger.debug('invalid Content-Type');\n        request.reply(415);\n        return;\n      }\n\n      this._processInDialogSdpOffer(request) // Send answer.\n      .then(function (desc) {\n        if (_this14._status === C.STATUS_TERMINATED) {\n          return;\n        }\n\n        sendAnswer.call(_this14, desc);\n      })[\"catch\"](function (error) {\n        logger.warn(error);\n      });\n\n      function sendAnswer(desc) {\n        var _this15 = this;\n\n        var extraHeaders = [\"Contact: \".concat(this._contact)];\n\n        this._handleSessionTimersInIncomingRequest(request, extraHeaders);\n\n        if (this._late_sdp) {\n          desc = this._mangleOffer(desc);\n        }\n\n        request.reply(200, null, extraHeaders, desc, function () {\n          _this15._status = C.STATUS_WAITING_FOR_ACK;\n\n          _this15._setInvite2xxTimer(request, desc);\n\n          _this15._setACKTimer();\n        }); // If callback is given execute it.\n\n        if (typeof data.callback === 'function') {\n          data.callback();\n        }\n      }\n    }\n    /**\n     * In dialog UPDATE Reception\n     */\n\n  }, {\n    key: \"_receiveUpdate\",\n    value: function _receiveUpdate(request) {\n      var _this16 = this;\n\n      logger.debug('receiveUpdate()');\n      var contentType = request.hasHeader('Content-Type') ? request.getHeader('Content-Type').toLowerCase() : undefined;\n      var data = {\n        request: request,\n        callback: undefined,\n        reject: reject.bind(this)\n      };\n      var rejected = false;\n\n      function reject() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        rejected = true;\n        var status_code = options.status_code || 403;\n        var reason_phrase = options.reason_phrase || '';\n        var extraHeaders = Utils.cloneArray(options.extraHeaders);\n\n        if (this._status !== C.STATUS_CONFIRMED) {\n          return false;\n        }\n\n        if (status_code < 300 || status_code >= 700) {\n          throw new TypeError(\"Invalid status_code: \".concat(status_code));\n        }\n\n        request.reply(status_code, reason_phrase, extraHeaders);\n      } // Emit 'update'.\n\n\n      this.emit('update', data);\n\n      if (rejected) {\n        return;\n      }\n\n      if (!request.body) {\n        sendAnswer.call(this, null);\n        return;\n      }\n\n      if (contentType !== 'application/sdp') {\n        logger.debug('invalid Content-Type');\n        request.reply(415);\n        return;\n      }\n\n      this._processInDialogSdpOffer(request) // Send answer.\n      .then(function (desc) {\n        if (_this16._status === C.STATUS_TERMINATED) {\n          return;\n        }\n\n        sendAnswer.call(_this16, desc);\n      })[\"catch\"](function (error) {\n        logger.warn(error);\n      });\n\n      function sendAnswer(desc) {\n        var extraHeaders = [\"Contact: \".concat(this._contact)];\n\n        this._handleSessionTimersInIncomingRequest(request, extraHeaders);\n\n        request.reply(200, null, extraHeaders, desc); // If callback is given execute it.\n\n        if (typeof data.callback === 'function') {\n          data.callback();\n        }\n      }\n    }\n  }, {\n    key: \"_processInDialogSdpOffer\",\n    value: function _processInDialogSdpOffer(request) {\n      var _this17 = this;\n\n      logger.debug('_processInDialogSdpOffer()');\n      var sdp = request.parseSDP();\n      var hold = false;\n\n      var _iterator4 = _createForOfIteratorHelper(sdp.media),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var m = _step4.value;\n\n          if (holdMediaTypes.indexOf(m.type) === -1) {\n            continue;\n          }\n\n          var direction = m.direction || sdp.direction || 'sendrecv';\n\n          if (direction === 'sendonly' || direction === 'inactive') {\n            hold = true;\n          } // If at least one of the streams is active don't emit 'hold'.\n          else {\n              hold = false;\n              break;\n            }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      var e = {\n        originator: 'remote',\n        type: 'offer',\n        sdp: request.body\n      };\n      logger.debug('emit \"sdp\"');\n      this.emit('sdp', e);\n      var offer = new RTCSessionDescription({\n        type: 'offer',\n        sdp: e.sdp\n      });\n      this._connectionPromiseQueue = this._connectionPromiseQueue // Set remote description.\n      .then(function () {\n        if (_this17._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        return _this17._connection.setRemoteDescription(offer)[\"catch\"](function (error) {\n          request.reply(488);\n          logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n          _this17.emit('peerconnection:setremotedescriptionfailed', error);\n\n          throw error;\n        });\n      }).then(function () {\n        if (_this17._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        if (_this17._remoteHold === true && hold === false) {\n          _this17._remoteHold = false;\n\n          _this17._onunhold('remote');\n        } else if (_this17._remoteHold === false && hold === true) {\n          _this17._remoteHold = true;\n\n          _this17._onhold('remote');\n        }\n      }) // Create local description.\n      .then(function () {\n        if (_this17._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        return _this17._createLocalDescription('answer', _this17._rtcAnswerConstraints)[\"catch\"](function (error) {\n          request.reply(500);\n          logger.warn('emit \"peerconnection:createtelocaldescriptionfailed\" [error:%o]', error);\n          throw error;\n        });\n      })[\"catch\"](function (error) {\n        logger.warn('_processInDialogSdpOffer() failed [error: %o]', error);\n      });\n      return this._connectionPromiseQueue;\n    }\n    /**\n     * In dialog Refer Reception\n     */\n\n  }, {\n    key: \"_receiveRefer\",\n    value: function _receiveRefer(request) {\n      var _this18 = this;\n\n      logger.debug('receiveRefer()');\n\n      if (!request.refer_to) {\n        logger.debug('no Refer-To header field present in REFER');\n        request.reply(400);\n        return;\n      }\n\n      if (request.refer_to.uri.scheme !== JsSIP_C.SIP) {\n        logger.debug('Refer-To header field points to a non-SIP URI scheme');\n        request.reply(416);\n        return;\n      } // Reply before the transaction timer expires.\n\n\n      request.reply(202);\n      var notifier = new RTCSession_ReferNotifier(this, request.cseq);\n      logger.debug('emit \"refer\"'); // Emit 'refer'.\n\n      this.emit('refer', {\n        request: request,\n        accept: function accept(initCallback, options) {\n          _accept.call(_this18, initCallback, options);\n        },\n        reject: function reject() {\n          _reject.call(_this18);\n        }\n      });\n\n      function _accept(initCallback) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        initCallback = typeof initCallback === 'function' ? initCallback : null;\n\n        if (this._status !== C.STATUS_WAITING_FOR_ACK && this._status !== C.STATUS_CONFIRMED) {\n          return false;\n        }\n\n        var session = new RTCSession(this._ua);\n        session.on('progress', function (_ref2) {\n          var response = _ref2.response;\n          notifier.notify(response.status_code, response.reason_phrase);\n        });\n        session.on('accepted', function (_ref3) {\n          var response = _ref3.response;\n          notifier.notify(response.status_code, response.reason_phrase);\n        });\n        session.on('_failed', function (_ref4) {\n          var message = _ref4.message,\n              cause = _ref4.cause;\n\n          if (message) {\n            notifier.notify(message.status_code, message.reason_phrase);\n          } else {\n            notifier.notify(487, cause);\n          }\n        }); // Consider the Replaces header present in the Refer-To URI.\n\n        if (request.refer_to.uri.hasHeader('replaces')) {\n          var replaces = decodeURIComponent(request.refer_to.uri.getHeader('replaces'));\n          options.extraHeaders = Utils.cloneArray(options.extraHeaders);\n          options.extraHeaders.push(\"Replaces: \".concat(replaces));\n        }\n\n        session.connect(request.refer_to.uri.toAor(), options, initCallback);\n      }\n\n      function _reject() {\n        notifier.notify(603);\n      }\n    }\n    /**\n     * In dialog Notify Reception\n     */\n\n  }, {\n    key: \"_receiveNotify\",\n    value: function _receiveNotify(request) {\n      logger.debug('receiveNotify()');\n\n      if (!request.event) {\n        request.reply(400);\n      }\n\n      switch (request.event.event) {\n        case 'refer':\n          {\n            var id;\n            var referSubscriber;\n\n            if (request.event.params && request.event.params.id) {\n              id = request.event.params.id;\n              referSubscriber = this._referSubscribers[id];\n            } else if (Object.keys(this._referSubscribers).length === 1) {\n              referSubscriber = this._referSubscribers[Object.keys(this._referSubscribers)[0]];\n            } else {\n              request.reply(400, 'Missing event id parameter');\n              return;\n            }\n\n            if (!referSubscriber) {\n              request.reply(481, 'Subscription does not exist');\n              return;\n            }\n\n            referSubscriber.receiveNotify(request);\n            request.reply(200);\n            break;\n          }\n\n        default:\n          {\n            request.reply(489);\n          }\n      }\n    }\n    /**\n     * INVITE with Replaces Reception\n     */\n\n  }, {\n    key: \"_receiveReplaces\",\n    value: function _receiveReplaces(request) {\n      var _this20 = this;\n\n      logger.debug('receiveReplaces()');\n\n      function _accept2(initCallback) {\n        var _this19 = this;\n\n        if (this._status !== C.STATUS_WAITING_FOR_ACK && this._status !== C.STATUS_CONFIRMED) {\n          return false;\n        }\n\n        var session = new RTCSession(this._ua); // Terminate the current session when the new one is confirmed.\n\n        session.on('confirmed', function () {\n          _this19.terminate();\n        });\n        session.init_incoming(request, initCallback);\n      }\n\n      function _reject2() {\n        logger.debug('Replaced INVITE rejected by the user');\n        request.reply(486);\n      } // Emit 'replace'.\n\n\n      this.emit('replaces', {\n        request: request,\n        accept: function accept(initCallback) {\n          _accept2.call(_this20, initCallback);\n        },\n        reject: function reject() {\n          _reject2.call(_this20);\n        }\n      });\n    }\n    /**\n     * Initial Request Sender\n     */\n\n  }, {\n    key: \"_sendInitialRequest\",\n    value: function _sendInitialRequest(mediaConstraints, rtcOfferConstraints, mediaStream) {\n      var _this21 = this;\n\n      var request_sender = new RequestSender(this._ua, this._request, {\n        onRequestTimeout: function onRequestTimeout() {\n          _this21.onRequestTimeout();\n        },\n        onTransportError: function onTransportError() {\n          _this21.onTransportError();\n        },\n        // Update the request on authentication.\n        onAuthenticated: function onAuthenticated(request) {\n          _this21._request = request;\n        },\n        onReceiveResponse: function onReceiveResponse(response) {\n          _this21._receiveInviteResponse(response);\n        }\n      }); // This Promise is resolved within the next iteration, so the app has now\n      // a chance to set events such as 'peerconnection' and 'connecting'.\n\n      Promise.resolve() // Get a stream if required.\n      .then(function () {\n        // A stream is given, let the app set events such as 'peerconnection' and 'connecting'.\n        if (mediaStream) {\n          return mediaStream;\n        } // Request for user media access.\n        else if (mediaConstraints.audio || mediaConstraints.video) {\n            _this21._localMediaStreamLocallyGenerated = true;\n            return navigator.mediaDevices.getUserMedia(mediaConstraints)[\"catch\"](function (error) {\n              if (_this21._status === C.STATUS_TERMINATED) {\n                throw new Error('terminated');\n              }\n\n              _this21._failed('local', null, JsSIP_C.causes.USER_DENIED_MEDIA_ACCESS);\n\n              logger.warn('emit \"getusermediafailed\" [error:%o]', error);\n\n              _this21.emit('getusermediafailed', error);\n\n              throw error;\n            });\n          }\n      }).then(function (stream) {\n        if (_this21._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        _this21._localMediaStream = stream;\n\n        if (stream) {\n          stream.getTracks().forEach(function (track) {\n            _this21._connection.addTrack(track, stream);\n          });\n        } // TODO: should this be triggered here?\n\n\n        _this21._connecting(_this21._request);\n\n        return _this21._createLocalDescription('offer', rtcOfferConstraints)[\"catch\"](function (error) {\n          _this21._failed('local', null, JsSIP_C.causes.WEBRTC_ERROR);\n\n          throw error;\n        });\n      }).then(function (desc) {\n        if (_this21._is_canceled || _this21._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        _this21._request.body = desc;\n        _this21._status = C.STATUS_INVITE_SENT;\n        logger.debug('emit \"sending\" [request:%o]', _this21._request); // Emit 'sending' so the app can mangle the body before the request is sent.\n\n        _this21.emit('sending', {\n          request: _this21._request\n        });\n\n        request_sender.send();\n      })[\"catch\"](function (error) {\n        if (_this21._status === C.STATUS_TERMINATED) {\n          return;\n        }\n\n        logger.warn(error);\n      });\n    }\n    /**\n     * Get DTMF RTCRtpSender.\n     */\n\n  }, {\n    key: \"_getDTMFRTPSender\",\n    value: function _getDTMFRTPSender() {\n      var sender = this._connection.getSenders().find(function (rtpSender) {\n        return rtpSender.track && rtpSender.track.kind === 'audio';\n      });\n\n      if (!(sender && sender.dtmf)) {\n        logger.warn('sendDTMF() | no local audio track to send DTMF with');\n        return;\n      }\n\n      return sender.dtmf;\n    }\n    /**\n     * Reception of Response for Initial INVITE\n     */\n\n  }, {\n    key: \"_receiveInviteResponse\",\n    value: function _receiveInviteResponse(response) {\n      var _this22 = this;\n\n      logger.debug('receiveInviteResponse()'); // Handle 2XX retransmissions and responses from forked requests.\n\n      if (this._dialog && response.status_code >= 200 && response.status_code <= 299) {\n        /*\n         * If it is a retransmission from the endpoint that established\n         * the dialog, send an ACK\n         */\n        if (this._dialog.id.call_id === response.call_id && this._dialog.id.local_tag === response.from_tag && this._dialog.id.remote_tag === response.to_tag) {\n          this.sendRequest(JsSIP_C.ACK);\n          return;\n        } // If not, send an ACK  and terminate.\n        else {\n            var dialog = new Dialog(this, response, 'UAC');\n\n            if (dialog.error !== undefined) {\n              logger.debug(dialog.error);\n              return;\n            }\n\n            this.sendRequest(JsSIP_C.ACK);\n            this.sendRequest(JsSIP_C.BYE);\n            return;\n          }\n      } // Proceed to cancellation if the user requested.\n\n\n      if (this._is_canceled) {\n        if (response.status_code >= 100 && response.status_code < 200) {\n          this._request.cancel(this._cancel_reason);\n        } else if (response.status_code >= 200 && response.status_code < 299) {\n          this._acceptAndTerminate(response);\n        }\n\n        return;\n      }\n\n      if (this._status !== C.STATUS_INVITE_SENT && this._status !== C.STATUS_1XX_RECEIVED) {\n        return;\n      }\n\n      switch (true) {\n        case /^100$/.test(response.status_code):\n          this._status = C.STATUS_1XX_RECEIVED;\n          break;\n\n        case /^1[0-9]{2}$/.test(response.status_code):\n          {\n            // Do nothing with 1xx responses without To tag.\n            if (!response.to_tag) {\n              logger.debug('1xx response received without to tag');\n              break;\n            } // Create Early Dialog if 1XX comes with contact.\n\n\n            if (response.hasHeader('contact')) {\n              // An error on dialog creation will fire 'failed' event.\n              if (!this._createDialog(response, 'UAC', true)) {\n                break;\n              }\n            }\n\n            this._status = C.STATUS_1XX_RECEIVED;\n\n            if (!response.body) {\n              this._progress('remote', response);\n\n              break;\n            }\n\n            var e = {\n              originator: 'remote',\n              type: 'answer',\n              sdp: response.body\n            };\n            logger.debug('emit \"sdp\"');\n            this.emit('sdp', e);\n            var answer = new RTCSessionDescription({\n              type: 'answer',\n              sdp: e.sdp\n            });\n            this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n              return _this22._connection.setRemoteDescription(answer);\n            }).then(function () {\n              return _this22._progress('remote', response);\n            })[\"catch\"](function (error) {\n              logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n              _this22.emit('peerconnection:setremotedescriptionfailed', error);\n            });\n            break;\n          }\n\n        case /^2[0-9]{2}$/.test(response.status_code):\n          {\n            this._status = C.STATUS_CONFIRMED;\n\n            if (!response.body) {\n              this._acceptAndTerminate(response, 400, JsSIP_C.causes.MISSING_SDP);\n\n              this._failed('remote', response, JsSIP_C.causes.BAD_MEDIA_DESCRIPTION);\n\n              break;\n            } // An error on dialog creation will fire 'failed' event.\n\n\n            if (!this._createDialog(response, 'UAC')) {\n              break;\n            }\n\n            var _e = {\n              originator: 'remote',\n              type: 'answer',\n              sdp: response.body\n            };\n            logger.debug('emit \"sdp\"');\n            this.emit('sdp', _e);\n\n            var _answer = new RTCSessionDescription({\n              type: 'answer',\n              sdp: _e.sdp\n            });\n\n            this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n              // Be ready for 200 with SDP after a 180/183 with SDP.\n              // We created a SDP 'answer' for it, so check the current signaling state.\n              if (_this22._connection.signalingState === 'stable') {\n                return _this22._connection.createOffer(_this22._rtcOfferConstraints).then(function (offer) {\n                  return _this22._connection.setLocalDescription(offer);\n                })[\"catch\"](function (error) {\n                  _this22._acceptAndTerminate(response, 500, error.toString());\n\n                  _this22._failed('local', response, JsSIP_C.causes.WEBRTC_ERROR);\n                });\n              }\n            }).then(function () {\n              _this22._connection.setRemoteDescription(_answer).then(function () {\n                // Handle Session Timers.\n                _this22._handleSessionTimersInIncomingResponse(response);\n\n                _this22._accepted('remote', response);\n\n                _this22.sendRequest(JsSIP_C.ACK);\n\n                _this22._confirmed('local', null);\n              })[\"catch\"](function (error) {\n                _this22._acceptAndTerminate(response, 488, 'Not Acceptable Here');\n\n                _this22._failed('remote', response, JsSIP_C.causes.BAD_MEDIA_DESCRIPTION);\n\n                logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n                _this22.emit('peerconnection:setremotedescriptionfailed', error);\n              });\n            });\n            break;\n          }\n\n        default:\n          {\n            var cause = Utils.sipErrorCause(response.status_code);\n\n            this._failed('remote', response, cause);\n          }\n      }\n    }\n    /**\n     * Send Re-INVITE\n     */\n\n  }, {\n    key: \"_sendReinvite\",\n    value: function _sendReinvite() {\n      var _this23 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      logger.debug('sendReinvite()');\n      var extraHeaders = Utils.cloneArray(options.extraHeaders);\n      var eventHandlers = Utils.cloneObject(options.eventHandlers);\n      var rtcOfferConstraints = options.rtcOfferConstraints || this._rtcOfferConstraints || null;\n      var succeeded = false;\n      extraHeaders.push(\"Contact: \".concat(this._contact));\n      extraHeaders.push('Content-Type: application/sdp'); // Session Timers.\n\n      if (this._sessionTimers.running) {\n        extraHeaders.push(\"Session-Expires: \".concat(this._sessionTimers.currentExpires, \";refresher=\").concat(this._sessionTimers.refresher ? 'uac' : 'uas'));\n      }\n\n      this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n        return _this23._createLocalDescription('offer', rtcOfferConstraints);\n      }).then(function (sdp) {\n        sdp = _this23._mangleOffer(sdp);\n        var e = {\n          originator: 'local',\n          type: 'offer',\n          sdp: sdp\n        };\n        logger.debug('emit \"sdp\"');\n\n        _this23.emit('sdp', e);\n\n        _this23.sendRequest(JsSIP_C.INVITE, {\n          extraHeaders: extraHeaders,\n          body: sdp,\n          eventHandlers: {\n            onSuccessResponse: function onSuccessResponse(response) {\n              onSucceeded.call(_this23, response);\n              succeeded = true;\n            },\n            onErrorResponse: function onErrorResponse(response) {\n              onFailed.call(_this23, response);\n            },\n            onTransportError: function onTransportError() {\n              _this23.onTransportError(); // Do nothing because session ends.\n\n            },\n            onRequestTimeout: function onRequestTimeout() {\n              _this23.onRequestTimeout(); // Do nothing because session ends.\n\n            },\n            onDialogError: function onDialogError() {\n              _this23.onDialogError(); // Do nothing because session ends.\n\n            }\n          }\n        });\n      })[\"catch\"](function () {\n        onFailed();\n      });\n\n      function onSucceeded(response) {\n        var _this24 = this;\n\n        if (this._status === C.STATUS_TERMINATED) {\n          return;\n        }\n\n        this.sendRequest(JsSIP_C.ACK); // If it is a 2XX retransmission exit now.\n\n        if (succeeded) {\n          return;\n        } // Handle Session Timers.\n\n\n        this._handleSessionTimersInIncomingResponse(response); // Must have SDP answer.\n\n\n        if (!response.body) {\n          onFailed.call(this);\n          return;\n        } else if (!response.hasHeader('Content-Type') || response.getHeader('Content-Type').toLowerCase() !== 'application/sdp') {\n          onFailed.call(this);\n          return;\n        }\n\n        var e = {\n          originator: 'remote',\n          type: 'answer',\n          sdp: response.body\n        };\n        logger.debug('emit \"sdp\"');\n        this.emit('sdp', e);\n        var answer = new RTCSessionDescription({\n          type: 'answer',\n          sdp: e.sdp\n        });\n        this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n          return _this24._connection.setRemoteDescription(answer);\n        }).then(function () {\n          if (eventHandlers.succeeded) {\n            eventHandlers.succeeded(response);\n          }\n        })[\"catch\"](function (error) {\n          onFailed.call(_this24);\n          logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n          _this24.emit('peerconnection:setremotedescriptionfailed', error);\n        });\n      }\n\n      function onFailed(response) {\n        if (eventHandlers.failed) {\n          eventHandlers.failed(response);\n        }\n      }\n    }\n    /**\n     * Send UPDATE\n     */\n\n  }, {\n    key: \"_sendUpdate\",\n    value: function _sendUpdate() {\n      var _this25 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      logger.debug('sendUpdate()');\n      var extraHeaders = Utils.cloneArray(options.extraHeaders);\n      var eventHandlers = Utils.cloneObject(options.eventHandlers);\n      var rtcOfferConstraints = options.rtcOfferConstraints || this._rtcOfferConstraints || null;\n      var sdpOffer = options.sdpOffer || false;\n      var succeeded = false;\n      extraHeaders.push(\"Contact: \".concat(this._contact)); // Session Timers.\n\n      if (this._sessionTimers.running) {\n        extraHeaders.push(\"Session-Expires: \".concat(this._sessionTimers.currentExpires, \";refresher=\").concat(this._sessionTimers.refresher ? 'uac' : 'uas'));\n      }\n\n      if (sdpOffer) {\n        extraHeaders.push('Content-Type: application/sdp');\n        this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n          return _this25._createLocalDescription('offer', rtcOfferConstraints);\n        }).then(function (sdp) {\n          sdp = _this25._mangleOffer(sdp);\n          var e = {\n            originator: 'local',\n            type: 'offer',\n            sdp: sdp\n          };\n          logger.debug('emit \"sdp\"');\n\n          _this25.emit('sdp', e);\n\n          _this25.sendRequest(JsSIP_C.UPDATE, {\n            extraHeaders: extraHeaders,\n            body: sdp,\n            eventHandlers: {\n              onSuccessResponse: function onSuccessResponse(response) {\n                onSucceeded.call(_this25, response);\n                succeeded = true;\n              },\n              onErrorResponse: function onErrorResponse(response) {\n                onFailed.call(_this25, response);\n              },\n              onTransportError: function onTransportError() {\n                _this25.onTransportError(); // Do nothing because session ends.\n\n              },\n              onRequestTimeout: function onRequestTimeout() {\n                _this25.onRequestTimeout(); // Do nothing because session ends.\n\n              },\n              onDialogError: function onDialogError() {\n                _this25.onDialogError(); // Do nothing because session ends.\n\n              }\n            }\n          });\n        })[\"catch\"](function () {\n          onFailed.call(_this25);\n        });\n      } // No SDP.\n      else {\n          this.sendRequest(JsSIP_C.UPDATE, {\n            extraHeaders: extraHeaders,\n            eventHandlers: {\n              onSuccessResponse: function onSuccessResponse(response) {\n                onSucceeded.call(_this25, response);\n              },\n              onErrorResponse: function onErrorResponse(response) {\n                onFailed.call(_this25, response);\n              },\n              onTransportError: function onTransportError() {\n                _this25.onTransportError(); // Do nothing because session ends.\n\n              },\n              onRequestTimeout: function onRequestTimeout() {\n                _this25.onRequestTimeout(); // Do nothing because session ends.\n\n              },\n              onDialogError: function onDialogError() {\n                _this25.onDialogError(); // Do nothing because session ends.\n\n              }\n            }\n          });\n        }\n\n      function onSucceeded(response) {\n        var _this26 = this;\n\n        if (this._status === C.STATUS_TERMINATED) {\n          return;\n        } // If it is a 2XX retransmission exit now.\n\n\n        if (succeeded) {\n          return;\n        } // Handle Session Timers.\n\n\n        this._handleSessionTimersInIncomingResponse(response); // Must have SDP answer.\n\n\n        if (sdpOffer) {\n          if (!response.body) {\n            onFailed.call(this);\n            return;\n          } else if (!response.hasHeader('Content-Type') || response.getHeader('Content-Type').toLowerCase() !== 'application/sdp') {\n            onFailed.call(this);\n            return;\n          }\n\n          var e = {\n            originator: 'remote',\n            type: 'answer',\n            sdp: response.body\n          };\n          logger.debug('emit \"sdp\"');\n          this.emit('sdp', e);\n          var answer = new RTCSessionDescription({\n            type: 'answer',\n            sdp: e.sdp\n          });\n          this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n            return _this26._connection.setRemoteDescription(answer);\n          }).then(function () {\n            if (eventHandlers.succeeded) {\n              eventHandlers.succeeded(response);\n            }\n          })[\"catch\"](function (error) {\n            onFailed.call(_this26);\n            logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n            _this26.emit('peerconnection:setremotedescriptionfailed', error);\n          });\n        } // No SDP answer.\n        else if (eventHandlers.succeeded) {\n            eventHandlers.succeeded(response);\n          }\n      }\n\n      function onFailed(response) {\n        if (eventHandlers.failed) {\n          eventHandlers.failed(response);\n        }\n      }\n    }\n  }, {\n    key: \"_acceptAndTerminate\",\n    value: function _acceptAndTerminate(response, status_code, reason_phrase) {\n      logger.debug('acceptAndTerminate()');\n      var extraHeaders = [];\n\n      if (status_code) {\n        reason_phrase = reason_phrase || JsSIP_C.REASON_PHRASE[status_code] || '';\n        extraHeaders.push(\"Reason: SIP ;cause=\".concat(status_code, \"; text=\\\"\").concat(reason_phrase, \"\\\"\"));\n      } // An error on dialog creation will fire 'failed' event.\n\n\n      if (this._dialog || this._createDialog(response, 'UAC')) {\n        this.sendRequest(JsSIP_C.ACK);\n        this.sendRequest(JsSIP_C.BYE, {\n          extraHeaders: extraHeaders\n        });\n      } // Update session status.\n\n\n      this._status = C.STATUS_TERMINATED;\n    }\n    /**\n     * Correctly set the SDP direction attributes if the call is on local hold\n     */\n\n  }, {\n    key: \"_mangleOffer\",\n    value: function _mangleOffer(sdp) {\n      if (!this._localHold && !this._remoteHold) {\n        return sdp;\n      }\n\n      sdp = sdp_transform.parse(sdp); // Local hold.\n\n      if (this._localHold && !this._remoteHold) {\n        logger.debug('mangleOffer() | me on hold, mangling offer');\n\n        var _iterator5 = _createForOfIteratorHelper(sdp.media),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var m = _step5.value;\n\n            if (holdMediaTypes.indexOf(m.type) === -1) {\n              continue;\n            }\n\n            if (!m.direction) {\n              m.direction = 'sendonly';\n            } else if (m.direction === 'sendrecv') {\n              m.direction = 'sendonly';\n            } else if (m.direction === 'recvonly') {\n              m.direction = 'inactive';\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      } // Local and remote hold.\n      else if (this._localHold && this._remoteHold) {\n          logger.debug('mangleOffer() | both on hold, mangling offer');\n\n          var _iterator6 = _createForOfIteratorHelper(sdp.media),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var _m = _step6.value;\n\n              if (holdMediaTypes.indexOf(_m.type) === -1) {\n                continue;\n              }\n\n              _m.direction = 'inactive';\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n        } // Remote hold.\n        else if (this._remoteHold) {\n            logger.debug('mangleOffer() | remote on hold, mangling offer');\n\n            var _iterator7 = _createForOfIteratorHelper(sdp.media),\n                _step7;\n\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var _m2 = _step7.value;\n\n                if (holdMediaTypes.indexOf(_m2.type) === -1) {\n                  continue;\n                }\n\n                if (!_m2.direction) {\n                  _m2.direction = 'recvonly';\n                } else if (_m2.direction === 'sendrecv') {\n                  _m2.direction = 'recvonly';\n                } else if (_m2.direction === 'recvonly') {\n                  _m2.direction = 'inactive';\n                }\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n          }\n\n      return sdp_transform.write(sdp);\n    }\n  }, {\n    key: \"_setLocalMediaStatus\",\n    value: function _setLocalMediaStatus() {\n      var enableAudio = true,\n          enableVideo = true;\n\n      if (this._localHold || this._remoteHold) {\n        enableAudio = false;\n        enableVideo = false;\n      }\n\n      if (this._audioMuted) {\n        enableAudio = false;\n      }\n\n      if (this._videoMuted) {\n        enableVideo = false;\n      }\n\n      this._toggleMuteAudio(!enableAudio);\n\n      this._toggleMuteVideo(!enableVideo);\n    }\n    /**\n     * Handle SessionTimers for an incoming INVITE or UPDATE.\n     * @param  {IncomingRequest} request\n     * @param  {Array} responseExtraHeaders  Extra headers for the 200 response.\n     */\n\n  }, {\n    key: \"_handleSessionTimersInIncomingRequest\",\n    value: function _handleSessionTimersInIncomingRequest(request, responseExtraHeaders) {\n      if (!this._sessionTimers.enabled) {\n        return;\n      }\n\n      var session_expires_refresher;\n\n      if (request.session_expires && request.session_expires >= JsSIP_C.MIN_SESSION_EXPIRES) {\n        this._sessionTimers.currentExpires = request.session_expires;\n        session_expires_refresher = request.session_expires_refresher || 'uas';\n      } else {\n        this._sessionTimers.currentExpires = this._sessionTimers.defaultExpires;\n        session_expires_refresher = 'uas';\n      }\n\n      responseExtraHeaders.push(\"Session-Expires: \".concat(this._sessionTimers.currentExpires, \";refresher=\").concat(session_expires_refresher));\n      this._sessionTimers.refresher = session_expires_refresher === 'uas';\n\n      this._runSessionTimer();\n    }\n    /**\n     * Handle SessionTimers for an incoming response to INVITE or UPDATE.\n     * @param  {IncomingResponse} response\n     */\n\n  }, {\n    key: \"_handleSessionTimersInIncomingResponse\",\n    value: function _handleSessionTimersInIncomingResponse(response) {\n      if (!this._sessionTimers.enabled) {\n        return;\n      }\n\n      var session_expires_refresher;\n\n      if (response.session_expires && response.session_expires >= JsSIP_C.MIN_SESSION_EXPIRES) {\n        this._sessionTimers.currentExpires = response.session_expires;\n        session_expires_refresher = response.session_expires_refresher || 'uac';\n      } else {\n        this._sessionTimers.currentExpires = this._sessionTimers.defaultExpires;\n        session_expires_refresher = 'uac';\n      }\n\n      this._sessionTimers.refresher = session_expires_refresher === 'uac';\n\n      this._runSessionTimer();\n    }\n  }, {\n    key: \"_runSessionTimer\",\n    value: function _runSessionTimer() {\n      var _this27 = this;\n\n      var expires = this._sessionTimers.currentExpires;\n      this._sessionTimers.running = true;\n      clearTimeout(this._sessionTimers.timer); // I'm the refresher.\n\n      if (this._sessionTimers.refresher) {\n        this._sessionTimers.timer = setTimeout(function () {\n          if (_this27._status === C.STATUS_TERMINATED) {\n            return;\n          }\n\n          logger.debug('runSessionTimer() | sending session refresh request');\n\n          if (_this27._sessionTimers.refreshMethod === JsSIP_C.UPDATE) {\n            _this27._sendUpdate();\n          } else {\n            _this27._sendReinvite();\n          }\n        }, expires * 500); // Half the given interval (as the RFC states).\n      } // I'm not the refresher.\n      else {\n          this._sessionTimers.timer = setTimeout(function () {\n            if (_this27._status === C.STATUS_TERMINATED) {\n              return;\n            }\n\n            logger.warn('runSessionTimer() | timer expired, terminating the session');\n\n            _this27.terminate({\n              cause: JsSIP_C.causes.REQUEST_TIMEOUT,\n              status_code: 408,\n              reason_phrase: 'Session Timer Expired'\n            });\n          }, expires * 1100);\n        }\n    }\n  }, {\n    key: \"_toggleMuteAudio\",\n    value: function _toggleMuteAudio(mute) {\n      var senders = this._connection.getSenders().filter(function (sender) {\n        return sender.track && sender.track.kind === 'audio';\n      });\n\n      var _iterator8 = _createForOfIteratorHelper(senders),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var sender = _step8.value;\n          sender.track.enabled = !mute;\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n  }, {\n    key: \"_toggleMuteVideo\",\n    value: function _toggleMuteVideo(mute) {\n      var senders = this._connection.getSenders().filter(function (sender) {\n        return sender.track && sender.track.kind === 'video';\n      });\n\n      var _iterator9 = _createForOfIteratorHelper(senders),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var sender = _step9.value;\n          sender.track.enabled = !mute;\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n  }, {\n    key: \"_newRTCSession\",\n    value: function _newRTCSession(originator, request) {\n      logger.debug('newRTCSession()');\n\n      this._ua.newRTCSession(this, {\n        originator: originator,\n        session: this,\n        request: request\n      });\n    }\n  }, {\n    key: \"_connecting\",\n    value: function _connecting(request) {\n      logger.debug('session connecting');\n      logger.debug('emit \"connecting\"');\n      this.emit('connecting', {\n        request: request\n      });\n    }\n  }, {\n    key: \"_progress\",\n    value: function _progress(originator, response) {\n      logger.debug('session progress');\n      logger.debug('emit \"progress\"');\n      this.emit('progress', {\n        originator: originator,\n        response: response || null\n      });\n    }\n  }, {\n    key: \"_accepted\",\n    value: function _accepted(originator, message) {\n      logger.debug('session accepted');\n      this._start_time = new Date();\n      logger.debug('emit \"accepted\"');\n      this.emit('accepted', {\n        originator: originator,\n        response: message || null\n      });\n    }\n  }, {\n    key: \"_confirmed\",\n    value: function _confirmed(originator, ack) {\n      logger.debug('session confirmed');\n      this._is_confirmed = true;\n      logger.debug('emit \"confirmed\"');\n      this.emit('confirmed', {\n        originator: originator,\n        ack: ack || null\n      });\n    }\n  }, {\n    key: \"_ended\",\n    value: function _ended(originator, message, cause) {\n      logger.debug('session ended');\n      this._end_time = new Date();\n\n      this._close();\n\n      logger.debug('emit \"ended\"');\n      this.emit('ended', {\n        originator: originator,\n        message: message || null,\n        cause: cause\n      });\n    }\n  }, {\n    key: \"_failed\",\n    value: function _failed(originator, message, cause) {\n      logger.debug('session failed'); // Emit private '_failed' event first.\n\n      logger.debug('emit \"_failed\"');\n      this.emit('_failed', {\n        originator: originator,\n        message: message || null,\n        cause: cause\n      });\n\n      this._close();\n\n      logger.debug('emit \"failed\"');\n      this.emit('failed', {\n        originator: originator,\n        message: message || null,\n        cause: cause\n      });\n    }\n  }, {\n    key: \"_onhold\",\n    value: function _onhold(originator) {\n      logger.debug('session onhold');\n\n      this._setLocalMediaStatus();\n\n      logger.debug('emit \"hold\"');\n      this.emit('hold', {\n        originator: originator\n      });\n    }\n  }, {\n    key: \"_onunhold\",\n    value: function _onunhold(originator) {\n      logger.debug('session onunhold');\n\n      this._setLocalMediaStatus();\n\n      logger.debug('emit \"unhold\"');\n      this.emit('unhold', {\n        originator: originator\n      });\n    }\n  }, {\n    key: \"_onmute\",\n    value: function _onmute(_ref5) {\n      var audio = _ref5.audio,\n          video = _ref5.video;\n      logger.debug('session onmute');\n\n      this._setLocalMediaStatus();\n\n      logger.debug('emit \"muted\"');\n      this.emit('muted', {\n        audio: audio,\n        video: video\n      });\n    }\n  }, {\n    key: \"_onunmute\",\n    value: function _onunmute(_ref6) {\n      var audio = _ref6.audio,\n          video = _ref6.video;\n      logger.debug('session onunmute');\n\n      this._setLocalMediaStatus();\n\n      logger.debug('emit \"unmuted\"');\n      this.emit('unmuted', {\n        audio: audio,\n        video: video\n      });\n    }\n  }, {\n    key: \"C\",\n    get: function get() {\n      return C;\n    } // Expose session failed/ended causes as a property of the RTCSession instance.\n\n  }, {\n    key: \"causes\",\n    get: function get() {\n      return JsSIP_C.causes;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"connection\",\n    get: function get() {\n      return this._connection;\n    }\n  }, {\n    key: \"contact\",\n    get: function get() {\n      return this._contact;\n    }\n  }, {\n    key: \"direction\",\n    get: function get() {\n      return this._direction;\n    }\n  }, {\n    key: \"local_identity\",\n    get: function get() {\n      return this._local_identity;\n    }\n  }, {\n    key: \"remote_identity\",\n    get: function get() {\n      return this._remote_identity;\n    }\n  }, {\n    key: \"start_time\",\n    get: function get() {\n      return this._start_time;\n    }\n  }, {\n    key: \"end_time\",\n    get: function get() {\n      return this._end_time;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    },\n    set: function set(_data) {\n      this._data = _data;\n    }\n  }, {\n    key: \"status\",\n    get: function get() {\n      return this._status;\n    }\n  }]);\n\n  return RTCSession;\n}(EventEmitter);","map":{"version":3,"sources":["/Users/tuphan/Desktop/gcallstest/node_modules/jssip/lib-es5/RTCSession.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e2","f","TypeError","normalCompletion","didErr","err","step","next","_e3","minLen","_arrayLikeToArray","Object","toString","call","slice","name","from","test","arr","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Date","getPrototypeOf","EventEmitter","require","sdp_transform","Logger","JsSIP_C","Exceptions","Transactions","Utils","Timers","SIPMessage","Dialog","RequestSender","RTCSession_DTMF","RTCSession_Info","RTCSession_ReferNotifier","RTCSession_ReferSubscriber","URI","logger","C","STATUS_NULL","STATUS_INVITE_SENT","STATUS_1XX_RECEIVED","STATUS_INVITE_RECEIVED","STATUS_WAITING_FOR_ANSWER","STATUS_ANSWERED","STATUS_WAITING_FOR_ACK","STATUS_CANCELED","STATUS_TERMINATED","STATUS_CONFIRMED","holdMediaTypes","module","exports","_EventEmitter","RTCSession","_super","get","ua","_this","debug","_id","_ua","_status","_dialog","_earlyDialogs","_contact","_from_tag","_to_tag","_connection","_connectionPromiseQueue","Promise","resolve","_request","_is_canceled","_cancel_reason","_is_confirmed","_late_sdp","_rtcOfferConstraints","_rtcAnswerConstraints","_localMediaStream","_localMediaStreamLocallyGenerated","_rtcReady","_timers","ackTimer","expiresTimer","invite2xxTimer","userNoAnswerTimer","_direction","_local_identity","_remote_identity","_start_time","_end_time","_tones","_audioMuted","_videoMuted","_localHold","_remoteHold","_sessionTimers","enabled","configuration","session_timers","refreshMethod","session_timers_refresh_method","defaultExpires","SESSION_EXPIRES","currentExpires","running","refresher","timer","_referSubscribers","_data","isInProgress","isEstablished","isEnded","isMuted","audio","video","isOnHold","local","remote","connect","options","undefined","initCallback","originalTarget","eventHandlers","cloneObject","extraHeaders","cloneArray","mediaConstraints","mediaStream","pcConfig","iceServers","rtcConstraints","rtcOfferConstraints","rtcAnswerConstraints","data","InvalidStateError","window","RTCPeerConnection","NotSupportedError","normalizeTarget","concat","isDecimal","sessionTimersExpires","MIN_SESSION_EXPIRES","event","hasOwnProperty","on","newTag","anonymous","requestParams","from_tag","contact","outbound","from_display_name","from_uri","push","uri","fromUserName","host","fromDisplayName","session_timers_force_refresher","InitialOutgoingInviteRequest","call_id","_createRTCConnection","to","_newRTCSession","_sendInitialRequest","init_incoming","request","_this2","expires","contentType","hasHeader","getHeader","toLowerCase","body","reply","to_tag","_createDialog","setTimeout","_failed","causes","NO_ANSWER","no_answer_timeout","EXPIRES","_progress","answer","_this3","tracks","peerHasAudioLine","peerHasVideoLine","peerOffersFullAudio","peerOffersFullVideo","clearTimeout","unshift","sdp","parseSDP","media","_iterator","_step","m","type","direction","getAudioTracks","_iterator2","_step2","track","removeTrack","getVideoTracks","_iterator3","_step3","_track","offerToReceiveAudio","offerToReceiveVideo","then","navigator","mediaDevices","getUserMedia","error","Error","USER_DENIED_MEDIA_ACCESS","warn","emit","stream","getTracks","forEach","addTrack","originator","offer","RTCSessionDescription","setRemoteDescription","WEBRTC_ERROR","_connecting","_createLocalDescription","desc","_handleSessionTimersInIncomingRequest","_setInvite2xxTimer","_setACKTimer","_accepted","CONNECTION_ERROR","terminate","_this4","cause","BYE","cancel_reason","status_code","reason_phrase","REASON_PHRASE","cancel","CANCELED","REJECTED","server_transaction","state","dialog","receiveRequest","_ref","method","ACK","sendRequest","_ended","newDialog","sendDTMF","tones","position","duration","interToneGap","transportType","DTMF_TRANSPORT","INFO","RFC2833","match","DEFAULT_DURATION","MIN_DURATION","MAX_DURATION","Math","abs","DEFAULT_INTER_TONE_GAP","MIN_INTER_TONE_GAP","sender","_getDTMFRTPSender","toneBuffer","insertDTMF","_sendDTMF","_this5","timeout","tone","dtmf","onFailed","send","bind","sendInfo","info","mute","audioMuted","videoMuted","_toggleMuteAudio","_toggleMuteVideo","_onmute","unmute","audioUnMuted","videoUnMuted","_onunmute","hold","_this6","_isReadyToReOffer","_onhold","succeeded","failed","useUpdate","_sendUpdate","sdpOffer","_sendReinvite","unhold","_this7","_onunhold","renegotiate","_this8","_setLocalMediaStatus","refer","_this9","referSubscriber","sendRefer","id","_this10","CANCEL","MISSING_SDP","_confirmed","BAD_MEDIA_DESCRIPTION","INVITE","_receiveReplaces","_receiveReinvite","UPDATE","_receiveUpdate","REFER","_receiveRefer","NOTIFY","_receiveNotify","onTransportError","onRequestTimeout","REQUEST_TIMEOUT","onDialogError","DIALOG_ERROR","newDTMF","newInfo","uac_pending_reply","uas_pending_reply","_close","closeMediaStream","close","subscriber","destroyRTCSession","T1","invite2xxRetransmission","T2","_this11","NO_ACK","TIMER_H","_this12","addEventListener","iceConnectionState","RTP_TIMEOUT","peerconnection","constraints","_this13","connection","createOffer","reject","createAnswer","setLocalDescription","iceGatheringState","iceRestart","localDescription","finished","iceCandidateListener","iceGatheringStateListener","ready","removeEventListener","candidate","message","early","local_tag","remote_tag","early_dialog","STATUS_EARLY","INTERNAL_ERROR","update","_this14","callback","rejected","sendAnswer","_processInDialogSdpOffer","_this15","_mangleOffer","_this16","_this17","_iterator4","_step4","indexOf","_this18","refer_to","scheme","SIP","notifier","cseq","accept","_accept","_reject","session","_ref2","response","notify","_ref3","_ref4","replaces","decodeURIComponent","toAor","params","keys","receiveNotify","_this20","_accept2","_this19","_reject2","_this21","request_sender","onAuthenticated","onReceiveResponse","_receiveInviteResponse","getSenders","find","rtpSender","kind","_this22","_acceptAndTerminate","_e","_answer","signalingState","_handleSessionTimersInIncomingResponse","sipErrorCause","_this23","onSuccessResponse","onSucceeded","onErrorResponse","_this24","_this25","_this26","parse","_iterator5","_step5","_iterator6","_step6","_m","_iterator7","_step7","_m2","write","enableAudio","enableVideo","responseExtraHeaders","session_expires_refresher","session_expires","_runSessionTimer","_this27","senders","filter","_iterator8","_step8","_iterator9","_step9","newRTCSession","ack","_ref5","_ref6","set"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/* globals RTCPeerConnection: false, RTCSessionDescription: false */\nvar EventEmitter = require('events').EventEmitter;\n\nvar sdp_transform = require('sdp-transform');\n\nvar Logger = require('./Logger');\n\nvar JsSIP_C = require('./Constants');\n\nvar Exceptions = require('./Exceptions');\n\nvar Transactions = require('./Transactions');\n\nvar Utils = require('./Utils');\n\nvar Timers = require('./Timers');\n\nvar SIPMessage = require('./SIPMessage');\n\nvar Dialog = require('./Dialog');\n\nvar RequestSender = require('./RequestSender');\n\nvar RTCSession_DTMF = require('./RTCSession/DTMF');\n\nvar RTCSession_Info = require('./RTCSession/Info');\n\nvar RTCSession_ReferNotifier = require('./RTCSession/ReferNotifier');\n\nvar RTCSession_ReferSubscriber = require('./RTCSession/ReferSubscriber');\n\nvar URI = require('./URI');\n\nvar logger = new Logger('RTCSession');\nvar C = {\n  // RTCSession states.\n  STATUS_NULL: 0,\n  STATUS_INVITE_SENT: 1,\n  STATUS_1XX_RECEIVED: 2,\n  STATUS_INVITE_RECEIVED: 3,\n  STATUS_WAITING_FOR_ANSWER: 4,\n  STATUS_ANSWERED: 5,\n  STATUS_WAITING_FOR_ACK: 6,\n  STATUS_CANCELED: 7,\n  STATUS_TERMINATED: 8,\n  STATUS_CONFIRMED: 9\n};\n/**\n * Local variables.\n */\n\nvar holdMediaTypes = ['audio', 'video'];\n\nmodule.exports = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(RTCSession, _EventEmitter);\n\n  var _super = _createSuper(RTCSession);\n\n  _createClass(RTCSession, null, [{\n    key: \"C\",\n\n    /**\n     * Expose C object.\n     */\n    get: function get() {\n      return C;\n    }\n  }]);\n\n  function RTCSession(ua) {\n    var _this;\n\n    _classCallCheck(this, RTCSession);\n\n    logger.debug('new');\n    _this = _super.call(this);\n    _this._id = null;\n    _this._ua = ua;\n    _this._status = C.STATUS_NULL;\n    _this._dialog = null;\n    _this._earlyDialogs = {};\n    _this._contact = null;\n    _this._from_tag = null;\n    _this._to_tag = null; // The RTCPeerConnection instance (public attribute).\n\n    _this._connection = null; // Prevent races on serial PeerConnction operations.\n\n    _this._connectionPromiseQueue = Promise.resolve(); // Incoming/Outgoing request being currently processed.\n\n    _this._request = null; // Cancel state for initial outgoing request.\n\n    _this._is_canceled = false;\n    _this._cancel_reason = ''; // RTCSession confirmation flag.\n\n    _this._is_confirmed = false; // Is late SDP being negotiated.\n\n    _this._late_sdp = false; // Default rtcOfferConstraints and rtcAnswerConstrainsts (passed in connect() or answer()).\n\n    _this._rtcOfferConstraints = null;\n    _this._rtcAnswerConstraints = null; // Local MediaStream.\n\n    _this._localMediaStream = null;\n    _this._localMediaStreamLocallyGenerated = false; // Flag to indicate PeerConnection ready for new actions.\n\n    _this._rtcReady = true; // SIP Timers.\n\n    _this._timers = {\n      ackTimer: null,\n      expiresTimer: null,\n      invite2xxTimer: null,\n      userNoAnswerTimer: null\n    }; // Session info.\n\n    _this._direction = null;\n    _this._local_identity = null;\n    _this._remote_identity = null;\n    _this._start_time = null;\n    _this._end_time = null;\n    _this._tones = null; // Mute/Hold state.\n\n    _this._audioMuted = false;\n    _this._videoMuted = false;\n    _this._localHold = false;\n    _this._remoteHold = false; // Session Timers (RFC 4028).\n\n    _this._sessionTimers = {\n      enabled: _this._ua.configuration.session_timers,\n      refreshMethod: _this._ua.configuration.session_timers_refresh_method,\n      defaultExpires: JsSIP_C.SESSION_EXPIRES,\n      currentExpires: null,\n      running: false,\n      refresher: false,\n      timer: null // A setTimeout.\n\n    }; // Map of ReferSubscriber instances indexed by the REFER's CSeq number.\n\n    _this._referSubscribers = {}; // Custom session empty object for high level use.\n\n    _this._data = {};\n    return _this;\n  }\n  /**\n   * User API\n   */\n  // Expose RTCSession constants as a property of the RTCSession instance.\n\n\n  _createClass(RTCSession, [{\n    key: \"isInProgress\",\n    value: function isInProgress() {\n      switch (this._status) {\n        case C.STATUS_NULL:\n        case C.STATUS_INVITE_SENT:\n        case C.STATUS_1XX_RECEIVED:\n        case C.STATUS_INVITE_RECEIVED:\n        case C.STATUS_WAITING_FOR_ANSWER:\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"isEstablished\",\n    value: function isEstablished() {\n      switch (this._status) {\n        case C.STATUS_ANSWERED:\n        case C.STATUS_WAITING_FOR_ACK:\n        case C.STATUS_CONFIRMED:\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"isEnded\",\n    value: function isEnded() {\n      switch (this._status) {\n        case C.STATUS_CANCELED:\n        case C.STATUS_TERMINATED:\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"isMuted\",\n    value: function isMuted() {\n      return {\n        audio: this._audioMuted,\n        video: this._videoMuted\n      };\n    }\n  }, {\n    key: \"isOnHold\",\n    value: function isOnHold() {\n      return {\n        local: this._localHold,\n        remote: this._remoteHold\n      };\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(target) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var initCallback = arguments.length > 2 ? arguments[2] : undefined;\n      logger.debug('connect()');\n      var originalTarget = target;\n      var eventHandlers = Utils.cloneObject(options.eventHandlers);\n      var extraHeaders = Utils.cloneArray(options.extraHeaders);\n      var mediaConstraints = Utils.cloneObject(options.mediaConstraints, {\n        audio: true,\n        video: true\n      });\n      var mediaStream = options.mediaStream || null;\n      var pcConfig = Utils.cloneObject(options.pcConfig, {\n        iceServers: []\n      });\n      var rtcConstraints = options.rtcConstraints || null;\n      var rtcOfferConstraints = options.rtcOfferConstraints || null;\n      this._rtcOfferConstraints = rtcOfferConstraints;\n      this._rtcAnswerConstraints = options.rtcAnswerConstraints || null;\n      this._data = options.data || this._data; // Check target.\n\n      if (target === undefined) {\n        throw new TypeError('Not enough arguments');\n      } // Check Session Status.\n\n\n      if (this._status !== C.STATUS_NULL) {\n        throw new Exceptions.InvalidStateError(this._status);\n      } // Check WebRTC support.\n\n\n      if (!window.RTCPeerConnection) {\n        throw new Exceptions.NotSupportedError('WebRTC not supported');\n      } // Check target validity.\n\n\n      target = this._ua.normalizeTarget(target);\n\n      if (!target) {\n        throw new TypeError(\"Invalid target: \".concat(originalTarget));\n      } // Session Timers.\n\n\n      if (this._sessionTimers.enabled) {\n        if (Utils.isDecimal(options.sessionTimersExpires)) {\n          if (options.sessionTimersExpires >= JsSIP_C.MIN_SESSION_EXPIRES) {\n            this._sessionTimers.defaultExpires = options.sessionTimersExpires;\n          } else {\n            this._sessionTimers.defaultExpires = JsSIP_C.SESSION_EXPIRES;\n          }\n        }\n      } // Set event handlers.\n\n\n      for (var event in eventHandlers) {\n        if (Object.prototype.hasOwnProperty.call(eventHandlers, event)) {\n          this.on(event, eventHandlers[event]);\n        }\n      } // Session parameter initialization.\n\n\n      this._from_tag = Utils.newTag(); // Set anonymous property.\n\n      var anonymous = options.anonymous || false;\n      var requestParams = {\n        from_tag: this._from_tag\n      };\n      this._contact = this._ua.contact.toString({\n        anonymous: anonymous,\n        outbound: true\n      });\n\n      if (anonymous) {\n        requestParams.from_display_name = 'Anonymous';\n        requestParams.from_uri = new URI('sip', 'anonymous', 'anonymous.invalid');\n        extraHeaders.push(\"P-Preferred-Identity: \".concat(this._ua.configuration.uri.toString()));\n        extraHeaders.push('Privacy: id');\n      } else if (options.fromUserName) {\n        requestParams.from_uri = new URI('sip', options.fromUserName, this._ua.configuration.uri.host);\n        extraHeaders.push(\"P-Preferred-Identity: \".concat(this._ua.configuration.uri.toString()));\n      }\n\n      if (options.fromDisplayName) {\n        requestParams.from_display_name = options.fromDisplayName;\n      }\n\n      extraHeaders.push(\"Contact: \".concat(this._contact));\n      extraHeaders.push('Content-Type: application/sdp');\n\n      if (this._sessionTimers.enabled) {\n        extraHeaders.push(\"Session-Expires: \".concat(this._sessionTimers.defaultExpires).concat(this._ua.configuration.session_timers_force_refresher ? ';refresher=uac' : ''));\n      }\n\n      this._request = new SIPMessage.InitialOutgoingInviteRequest(target, this._ua, requestParams, extraHeaders);\n      this._id = this._request.call_id + this._from_tag; // Create a new RTCPeerConnection instance.\n\n      this._createRTCConnection(pcConfig, rtcConstraints); // Set internal properties.\n\n\n      this._direction = 'outgoing';\n      this._local_identity = this._request.from;\n      this._remote_identity = this._request.to; // User explicitly provided a newRTCSession callback for this session.\n\n      if (initCallback) {\n        initCallback(this);\n      }\n\n      this._newRTCSession('local', this._request);\n\n      this._sendInitialRequest(mediaConstraints, rtcOfferConstraints, mediaStream);\n    }\n  }, {\n    key: \"init_incoming\",\n    value: function init_incoming(request, initCallback) {\n      var _this2 = this;\n\n      logger.debug('init_incoming()');\n      var expires;\n      var contentType = request.hasHeader('Content-Type') ? request.getHeader('Content-Type').toLowerCase() : undefined; // Check body and content type.\n\n      if (request.body && contentType !== 'application/sdp') {\n        request.reply(415);\n        return;\n      } // Session parameter initialization.\n\n\n      this._status = C.STATUS_INVITE_RECEIVED;\n      this._from_tag = request.from_tag;\n      this._id = request.call_id + this._from_tag;\n      this._request = request;\n      this._contact = this._ua.contact.toString(); // Get the Expires header value if exists.\n\n      if (request.hasHeader('expires')) {\n        expires = request.getHeader('expires') * 1000;\n      }\n      /* Set the to_tag before\n       * replying a response code that will create a dialog.\n       */\n\n\n      request.to_tag = Utils.newTag(); // An error on dialog creation will fire 'failed' event.\n\n      if (!this._createDialog(request, 'UAS', true)) {\n        request.reply(500, 'Missing Contact header field');\n        return;\n      }\n\n      if (request.body) {\n        this._late_sdp = false;\n      } else {\n        this._late_sdp = true;\n      }\n\n      this._status = C.STATUS_WAITING_FOR_ANSWER; // Set userNoAnswerTimer.\n\n      this._timers.userNoAnswerTimer = setTimeout(function () {\n        request.reply(408);\n\n        _this2._failed('local', null, JsSIP_C.causes.NO_ANSWER);\n      }, this._ua.configuration.no_answer_timeout);\n      /* Set expiresTimer\n       * RFC3261 13.3.1\n       */\n\n      if (expires) {\n        this._timers.expiresTimer = setTimeout(function () {\n          if (_this2._status === C.STATUS_WAITING_FOR_ANSWER) {\n            request.reply(487);\n\n            _this2._failed('system', null, JsSIP_C.causes.EXPIRES);\n          }\n        }, expires);\n      } // Set internal properties.\n\n\n      this._direction = 'incoming';\n      this._local_identity = request.to;\n      this._remote_identity = request.from; // A init callback was specifically defined.\n\n      if (initCallback) {\n        initCallback(this);\n      } // Fire 'newRTCSession' event.\n\n\n      this._newRTCSession('remote', request); // The user may have rejected the call in the 'newRTCSession' event.\n\n\n      if (this._status === C.STATUS_TERMINATED) {\n        return;\n      } // Reply 180.\n\n\n      request.reply(180, null, [\"Contact: \".concat(this._contact)]); // Fire 'progress' event.\n      // TODO: Document that 'response' field in 'progress' event is null for incoming calls.\n\n      this._progress('local', null);\n    }\n    /**\n     * Answer the call.\n     */\n\n  }, {\n    key: \"answer\",\n    value: function answer() {\n      var _this3 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      logger.debug('answer()');\n      var request = this._request;\n      var extraHeaders = Utils.cloneArray(options.extraHeaders);\n      var mediaConstraints = Utils.cloneObject(options.mediaConstraints);\n      var mediaStream = options.mediaStream || null;\n      var pcConfig = Utils.cloneObject(options.pcConfig, {\n        iceServers: []\n      });\n      var rtcConstraints = options.rtcConstraints || null;\n      var rtcAnswerConstraints = options.rtcAnswerConstraints || null;\n      var rtcOfferConstraints = Utils.cloneObject(options.rtcOfferConstraints);\n      var tracks;\n      var peerHasAudioLine = false;\n      var peerHasVideoLine = false;\n      var peerOffersFullAudio = false;\n      var peerOffersFullVideo = false;\n      this._rtcAnswerConstraints = rtcAnswerConstraints;\n      this._rtcOfferConstraints = options.rtcOfferConstraints || null;\n      this._data = options.data || this._data; // Check Session Direction and Status.\n\n      if (this._direction !== 'incoming') {\n        throw new Exceptions.NotSupportedError('\"answer\" not supported for outgoing RTCSession');\n      } // Check Session status.\n\n\n      if (this._status !== C.STATUS_WAITING_FOR_ANSWER) {\n        throw new Exceptions.InvalidStateError(this._status);\n      } // Session Timers.\n\n\n      if (this._sessionTimers.enabled) {\n        if (Utils.isDecimal(options.sessionTimersExpires)) {\n          if (options.sessionTimersExpires >= JsSIP_C.MIN_SESSION_EXPIRES) {\n            this._sessionTimers.defaultExpires = options.sessionTimersExpires;\n          } else {\n            this._sessionTimers.defaultExpires = JsSIP_C.SESSION_EXPIRES;\n          }\n        }\n      }\n\n      this._status = C.STATUS_ANSWERED; // An error on dialog creation will fire 'failed' event.\n\n      if (!this._createDialog(request, 'UAS')) {\n        request.reply(500, 'Error creating dialog');\n        return;\n      }\n\n      clearTimeout(this._timers.userNoAnswerTimer);\n      extraHeaders.unshift(\"Contact: \".concat(this._contact)); // Determine incoming media from incoming SDP offer (if any).\n\n      var sdp = request.parseSDP(); // Make sure sdp.media is an array, not the case if there is only one media.\n\n      if (!Array.isArray(sdp.media)) {\n        sdp.media = [sdp.media];\n      } // Go through all medias in SDP to find offered capabilities to answer with.\n\n\n      var _iterator = _createForOfIteratorHelper(sdp.media),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var m = _step.value;\n\n          if (m.type === 'audio') {\n            peerHasAudioLine = true;\n\n            if (!m.direction || m.direction === 'sendrecv') {\n              peerOffersFullAudio = true;\n            }\n          }\n\n          if (m.type === 'video') {\n            peerHasVideoLine = true;\n\n            if (!m.direction || m.direction === 'sendrecv') {\n              peerOffersFullVideo = true;\n            }\n          }\n        } // Remove audio from mediaStream if suggested by mediaConstraints.\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (mediaStream && mediaConstraints.audio === false) {\n        tracks = mediaStream.getAudioTracks();\n\n        var _iterator2 = _createForOfIteratorHelper(tracks),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var track = _step2.value;\n            mediaStream.removeTrack(track);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } // Remove video from mediaStream if suggested by mediaConstraints.\n\n\n      if (mediaStream && mediaConstraints.video === false) {\n        tracks = mediaStream.getVideoTracks();\n\n        var _iterator3 = _createForOfIteratorHelper(tracks),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _track = _step3.value;\n            mediaStream.removeTrack(_track);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      } // Set audio constraints based on incoming stream if not supplied.\n\n\n      if (!mediaStream && mediaConstraints.audio === undefined) {\n        mediaConstraints.audio = peerOffersFullAudio;\n      } // Set video constraints based on incoming stream if not supplied.\n\n\n      if (!mediaStream && mediaConstraints.video === undefined) {\n        mediaConstraints.video = peerOffersFullVideo;\n      } // Don't ask for audio if the incoming offer has no audio section.\n\n\n      if (!mediaStream && !peerHasAudioLine && !rtcOfferConstraints.offerToReceiveAudio) {\n        mediaConstraints.audio = false;\n      } // Don't ask for video if the incoming offer has no video section.\n\n\n      if (!mediaStream && !peerHasVideoLine && !rtcOfferConstraints.offerToReceiveVideo) {\n        mediaConstraints.video = false;\n      } // Create a new RTCPeerConnection instance.\n      // TODO: This may throw an error, should react.\n\n\n      this._createRTCConnection(pcConfig, rtcConstraints);\n\n      Promise.resolve() // Handle local MediaStream.\n      .then(function () {\n        // A local MediaStream is given, use it.\n        if (mediaStream) {\n          return mediaStream;\n        } // Audio and/or video requested, prompt getUserMedia.\n        else if (mediaConstraints.audio || mediaConstraints.video) {\n            _this3._localMediaStreamLocallyGenerated = true;\n            return navigator.mediaDevices.getUserMedia(mediaConstraints)[\"catch\"](function (error) {\n              if (_this3._status === C.STATUS_TERMINATED) {\n                throw new Error('terminated');\n              }\n\n              request.reply(480);\n\n              _this3._failed('local', null, JsSIP_C.causes.USER_DENIED_MEDIA_ACCESS);\n\n              logger.warn('emit \"getusermediafailed\" [error:%o]', error);\n\n              _this3.emit('getusermediafailed', error);\n\n              throw new Error('getUserMedia() failed');\n            });\n          }\n      }) // Attach MediaStream to RTCPeerconnection.\n      .then(function (stream) {\n        if (_this3._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        _this3._localMediaStream = stream;\n\n        if (stream) {\n          stream.getTracks().forEach(function (track) {\n            _this3._connection.addTrack(track, stream);\n          });\n        }\n      }) // Set remote description.\n      .then(function () {\n        if (_this3._late_sdp) {\n          return;\n        }\n\n        var e = {\n          originator: 'remote',\n          type: 'offer',\n          sdp: request.body\n        };\n        logger.debug('emit \"sdp\"');\n\n        _this3.emit('sdp', e);\n\n        var offer = new RTCSessionDescription({\n          type: 'offer',\n          sdp: e.sdp\n        });\n        _this3._connectionPromiseQueue = _this3._connectionPromiseQueue.then(function () {\n          return _this3._connection.setRemoteDescription(offer);\n        })[\"catch\"](function (error) {\n          request.reply(488);\n\n          _this3._failed('system', null, JsSIP_C.causes.WEBRTC_ERROR);\n\n          logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n          _this3.emit('peerconnection:setremotedescriptionfailed', error);\n\n          throw new Error('peerconnection.setRemoteDescription() failed');\n        });\n        return _this3._connectionPromiseQueue;\n      }) // Create local description.\n      .then(function () {\n        if (_this3._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        } // TODO: Is this event already useful?\n\n\n        _this3._connecting(request);\n\n        if (!_this3._late_sdp) {\n          return _this3._createLocalDescription('answer', rtcAnswerConstraints)[\"catch\"](function () {\n            request.reply(500);\n            throw new Error('_createLocalDescription() failed');\n          });\n        } else {\n          return _this3._createLocalDescription('offer', _this3._rtcOfferConstraints)[\"catch\"](function () {\n            request.reply(500);\n            throw new Error('_createLocalDescription() failed');\n          });\n        }\n      }) // Send reply.\n      .then(function (desc) {\n        if (_this3._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        _this3._handleSessionTimersInIncomingRequest(request, extraHeaders);\n\n        request.reply(200, null, extraHeaders, desc, function () {\n          _this3._status = C.STATUS_WAITING_FOR_ACK;\n\n          _this3._setInvite2xxTimer(request, desc);\n\n          _this3._setACKTimer();\n\n          _this3._accepted('local');\n        }, function () {\n          _this3._failed('system', null, JsSIP_C.causes.CONNECTION_ERROR);\n        });\n      })[\"catch\"](function (error) {\n        if (_this3._status === C.STATUS_TERMINATED) {\n          return;\n        }\n\n        logger.warn(error);\n      });\n    }\n    /**\n     * Terminate the call.\n     */\n\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      var _this4 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      logger.debug('terminate()');\n      var cause = options.cause || JsSIP_C.causes.BYE;\n      var extraHeaders = Utils.cloneArray(options.extraHeaders);\n      var body = options.body;\n      var cancel_reason;\n      var status_code = options.status_code;\n      var reason_phrase = options.reason_phrase; // Check Session Status.\n\n      if (this._status === C.STATUS_TERMINATED) {\n        throw new Exceptions.InvalidStateError(this._status);\n      }\n\n      switch (this._status) {\n        // - UAC -\n        case C.STATUS_NULL:\n        case C.STATUS_INVITE_SENT:\n        case C.STATUS_1XX_RECEIVED:\n          logger.debug('canceling session');\n\n          if (status_code && (status_code < 200 || status_code >= 700)) {\n            throw new TypeError(\"Invalid status_code: \".concat(status_code));\n          } else if (status_code) {\n            reason_phrase = reason_phrase || JsSIP_C.REASON_PHRASE[status_code] || '';\n            cancel_reason = \"SIP ;cause=\".concat(status_code, \" ;text=\\\"\").concat(reason_phrase, \"\\\"\");\n          } // Check Session Status.\n\n\n          if (this._status === C.STATUS_NULL || this._status === C.STATUS_INVITE_SENT) {\n            this._is_canceled = true;\n            this._cancel_reason = cancel_reason;\n          } else if (this._status === C.STATUS_1XX_RECEIVED) {\n            this._request.cancel(cancel_reason);\n          }\n\n          this._status = C.STATUS_CANCELED;\n\n          this._failed('local', null, JsSIP_C.causes.CANCELED);\n\n          break;\n        // - UAS -\n\n        case C.STATUS_WAITING_FOR_ANSWER:\n        case C.STATUS_ANSWERED:\n          logger.debug('rejecting session');\n          status_code = status_code || 480;\n\n          if (status_code < 300 || status_code >= 700) {\n            throw new TypeError(\"Invalid status_code: \".concat(status_code));\n          }\n\n          this._request.reply(status_code, reason_phrase, extraHeaders, body);\n\n          this._failed('local', null, JsSIP_C.causes.REJECTED);\n\n          break;\n\n        case C.STATUS_WAITING_FOR_ACK:\n        case C.STATUS_CONFIRMED:\n          logger.debug('terminating session');\n          reason_phrase = options.reason_phrase || JsSIP_C.REASON_PHRASE[status_code] || '';\n\n          if (status_code && (status_code < 200 || status_code >= 700)) {\n            throw new TypeError(\"Invalid status_code: \".concat(status_code));\n          } else if (status_code) {\n            extraHeaders.push(\"Reason: SIP ;cause=\".concat(status_code, \"; text=\\\"\").concat(reason_phrase, \"\\\"\"));\n          }\n          /* RFC 3261 section 15 (Terminating a session):\n            *\n            * \"...the callee's UA MUST NOT send a BYE on a confirmed dialog\n            * until it has received an ACK for its 2xx response or until the server\n            * transaction times out.\"\n            */\n\n\n          if (this._status === C.STATUS_WAITING_FOR_ACK && this._direction === 'incoming' && this._request.server_transaction.state !== Transactions.C.STATUS_TERMINATED) {\n            // Save the dialog for later restoration.\n            var dialog = this._dialog; // Send the BYE as soon as the ACK is received...\n\n            this.receiveRequest = function (_ref) {\n              var method = _ref.method;\n\n              if (method === JsSIP_C.ACK) {\n                _this4.sendRequest(JsSIP_C.BYE, {\n                  extraHeaders: extraHeaders,\n                  body: body\n                });\n\n                dialog.terminate();\n              }\n            }; // .., or when the INVITE transaction times out\n\n\n            this._request.server_transaction.on('stateChanged', function () {\n              if (_this4._request.server_transaction.state === Transactions.C.STATUS_TERMINATED) {\n                _this4.sendRequest(JsSIP_C.BYE, {\n                  extraHeaders: extraHeaders,\n                  body: body\n                });\n\n                dialog.terminate();\n              }\n            });\n\n            this._ended('local', null, cause); // Restore the dialog into 'this' in order to be able to send the in-dialog BYE :-).\n\n\n            this._dialog = dialog; // Restore the dialog into 'ua' so the ACK can reach 'this' session.\n\n            this._ua.newDialog(dialog);\n          } else {\n            this.sendRequest(JsSIP_C.BYE, {\n              extraHeaders: extraHeaders,\n              body: body\n            });\n\n            this._ended('local', null, cause);\n          }\n\n      }\n    }\n  }, {\n    key: \"sendDTMF\",\n    value: function sendDTMF(tones) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      logger.debug('sendDTMF() | tones: %s', tones);\n      var position = 0;\n      var duration = options.duration || null;\n      var interToneGap = options.interToneGap || null;\n      var transportType = options.transportType || JsSIP_C.DTMF_TRANSPORT.INFO;\n\n      if (tones === undefined) {\n        throw new TypeError('Not enough arguments');\n      } // Check Session Status.\n\n\n      if (this._status !== C.STATUS_CONFIRMED && this._status !== C.STATUS_WAITING_FOR_ACK) {\n        throw new Exceptions.InvalidStateError(this._status);\n      } // Check Transport type.\n\n\n      if (transportType !== JsSIP_C.DTMF_TRANSPORT.INFO && transportType !== JsSIP_C.DTMF_TRANSPORT.RFC2833) {\n        throw new TypeError(\"invalid transportType: \".concat(transportType));\n      } // Convert to string.\n\n\n      if (typeof tones === 'number') {\n        tones = tones.toString();\n      } // Check tones.\n\n\n      if (!tones || typeof tones !== 'string' || !tones.match(/^[0-9A-DR#*,]+$/i)) {\n        throw new TypeError(\"Invalid tones: \".concat(tones));\n      } // Check duration.\n\n\n      if (duration && !Utils.isDecimal(duration)) {\n        throw new TypeError(\"Invalid tone duration: \".concat(duration));\n      } else if (!duration) {\n        duration = RTCSession_DTMF.C.DEFAULT_DURATION;\n      } else if (duration < RTCSession_DTMF.C.MIN_DURATION) {\n        logger.debug(\"\\\"duration\\\" value is lower than the minimum allowed, setting it to \".concat(RTCSession_DTMF.C.MIN_DURATION, \" milliseconds\"));\n        duration = RTCSession_DTMF.C.MIN_DURATION;\n      } else if (duration > RTCSession_DTMF.C.MAX_DURATION) {\n        logger.debug(\"\\\"duration\\\" value is greater than the maximum allowed, setting it to \".concat(RTCSession_DTMF.C.MAX_DURATION, \" milliseconds\"));\n        duration = RTCSession_DTMF.C.MAX_DURATION;\n      } else {\n        duration = Math.abs(duration);\n      }\n\n      options.duration = duration; // Check interToneGap.\n\n      if (interToneGap && !Utils.isDecimal(interToneGap)) {\n        throw new TypeError(\"Invalid interToneGap: \".concat(interToneGap));\n      } else if (!interToneGap) {\n        interToneGap = RTCSession_DTMF.C.DEFAULT_INTER_TONE_GAP;\n      } else if (interToneGap < RTCSession_DTMF.C.MIN_INTER_TONE_GAP) {\n        logger.debug(\"\\\"interToneGap\\\" value is lower than the minimum allowed, setting it to \".concat(RTCSession_DTMF.C.MIN_INTER_TONE_GAP, \" milliseconds\"));\n        interToneGap = RTCSession_DTMF.C.MIN_INTER_TONE_GAP;\n      } else {\n        interToneGap = Math.abs(interToneGap);\n      } // RFC2833. Let RTCDTMFSender enqueue the DTMFs.\n\n\n      if (transportType === JsSIP_C.DTMF_TRANSPORT.RFC2833) {\n        // Send DTMF in current audio RTP stream.\n        var sender = this._getDTMFRTPSender();\n\n        if (sender) {\n          // Add remaining buffered tones.\n          tones = sender.toneBuffer + tones; // Insert tones.\n\n          sender.insertDTMF(tones, duration, interToneGap);\n        }\n\n        return;\n      }\n\n      if (this._tones) {\n        // Tones are already queued, just add to the queue.\n        this._tones += tones;\n        return;\n      }\n\n      this._tones = tones; // Send the first tone.\n\n      _sendDTMF.call(this);\n\n      function _sendDTMF() {\n        var _this5 = this;\n\n        var timeout;\n\n        if (this._status === C.STATUS_TERMINATED || !this._tones || position >= this._tones.length) {\n          // Stop sending DTMF.\n          this._tones = null;\n          return;\n        }\n\n        var tone = this._tones[position];\n        position += 1;\n\n        if (tone === ',') {\n          timeout = 2000;\n        } else {\n          // Send DTMF via SIP INFO messages.\n          var dtmf = new RTCSession_DTMF(this);\n          options.eventHandlers = {\n            onFailed: function onFailed() {\n              _this5._tones = null;\n            }\n          };\n          dtmf.send(tone, options);\n          timeout = duration + interToneGap;\n        } // Set timeout for the next tone.\n\n\n        setTimeout(_sendDTMF.bind(this), timeout);\n      }\n    }\n  }, {\n    key: \"sendInfo\",\n    value: function sendInfo(contentType, body) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      logger.debug('sendInfo()'); // Check Session Status.\n\n      if (this._status !== C.STATUS_CONFIRMED && this._status !== C.STATUS_WAITING_FOR_ACK) {\n        throw new Exceptions.InvalidStateError(this._status);\n      }\n\n      var info = new RTCSession_Info(this);\n      info.send(contentType, body, options);\n    }\n    /**\n     * Mute\n     */\n\n  }, {\n    key: \"mute\",\n    value: function mute() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        audio: true,\n        video: false\n      };\n      logger.debug('mute()');\n      var audioMuted = false,\n          videoMuted = false;\n\n      if (this._audioMuted === false && options.audio) {\n        audioMuted = true;\n        this._audioMuted = true;\n\n        this._toggleMuteAudio(true);\n      }\n\n      if (this._videoMuted === false && options.video) {\n        videoMuted = true;\n        this._videoMuted = true;\n\n        this._toggleMuteVideo(true);\n      }\n\n      if (audioMuted === true || videoMuted === true) {\n        this._onmute({\n          audio: audioMuted,\n          video: videoMuted\n        });\n      }\n    }\n    /**\n     * Unmute\n     */\n\n  }, {\n    key: \"unmute\",\n    value: function unmute() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        audio: true,\n        video: true\n      };\n      logger.debug('unmute()');\n      var audioUnMuted = false,\n          videoUnMuted = false;\n\n      if (this._audioMuted === true && options.audio) {\n        audioUnMuted = true;\n        this._audioMuted = false;\n\n        if (this._localHold === false) {\n          this._toggleMuteAudio(false);\n        }\n      }\n\n      if (this._videoMuted === true && options.video) {\n        videoUnMuted = true;\n        this._videoMuted = false;\n\n        if (this._localHold === false) {\n          this._toggleMuteVideo(false);\n        }\n      }\n\n      if (audioUnMuted === true || videoUnMuted === true) {\n        this._onunmute({\n          audio: audioUnMuted,\n          video: videoUnMuted\n        });\n      }\n    }\n    /**\n     * Hold\n     */\n\n  }, {\n    key: \"hold\",\n    value: function hold() {\n      var _this6 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var done = arguments.length > 1 ? arguments[1] : undefined;\n      logger.debug('hold()');\n\n      if (this._status !== C.STATUS_WAITING_FOR_ACK && this._status !== C.STATUS_CONFIRMED) {\n        return false;\n      }\n\n      if (this._localHold === true) {\n        return false;\n      }\n\n      if (!this._isReadyToReOffer()) {\n        return false;\n      }\n\n      this._localHold = true;\n\n      this._onhold('local');\n\n      var eventHandlers = {\n        succeeded: function succeeded() {\n          if (done) {\n            done();\n          }\n        },\n        failed: function failed() {\n          _this6.terminate({\n            cause: JsSIP_C.causes.WEBRTC_ERROR,\n            status_code: 500,\n            reason_phrase: 'Hold Failed'\n          });\n        }\n      };\n\n      if (options.useUpdate) {\n        this._sendUpdate({\n          sdpOffer: true,\n          eventHandlers: eventHandlers,\n          extraHeaders: options.extraHeaders\n        });\n      } else {\n        this._sendReinvite({\n          eventHandlers: eventHandlers,\n          extraHeaders: options.extraHeaders\n        });\n      }\n\n      return true;\n    }\n  }, {\n    key: \"unhold\",\n    value: function unhold() {\n      var _this7 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var done = arguments.length > 1 ? arguments[1] : undefined;\n      logger.debug('unhold()');\n\n      if (this._status !== C.STATUS_WAITING_FOR_ACK && this._status !== C.STATUS_CONFIRMED) {\n        return false;\n      }\n\n      if (this._localHold === false) {\n        return false;\n      }\n\n      if (!this._isReadyToReOffer()) {\n        return false;\n      }\n\n      this._localHold = false;\n\n      this._onunhold('local');\n\n      var eventHandlers = {\n        succeeded: function succeeded() {\n          if (done) {\n            done();\n          }\n        },\n        failed: function failed() {\n          _this7.terminate({\n            cause: JsSIP_C.causes.WEBRTC_ERROR,\n            status_code: 500,\n            reason_phrase: 'Unhold Failed'\n          });\n        }\n      };\n\n      if (options.useUpdate) {\n        this._sendUpdate({\n          sdpOffer: true,\n          eventHandlers: eventHandlers,\n          extraHeaders: options.extraHeaders\n        });\n      } else {\n        this._sendReinvite({\n          eventHandlers: eventHandlers,\n          extraHeaders: options.extraHeaders\n        });\n      }\n\n      return true;\n    }\n  }, {\n    key: \"renegotiate\",\n    value: function renegotiate() {\n      var _this8 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var done = arguments.length > 1 ? arguments[1] : undefined;\n      logger.debug('renegotiate()');\n      var rtcOfferConstraints = options.rtcOfferConstraints || null;\n\n      if (this._status !== C.STATUS_WAITING_FOR_ACK && this._status !== C.STATUS_CONFIRMED) {\n        return false;\n      }\n\n      if (!this._isReadyToReOffer()) {\n        return false;\n      }\n\n      var eventHandlers = {\n        succeeded: function succeeded() {\n          if (done) {\n            done();\n          }\n        },\n        failed: function failed() {\n          _this8.terminate({\n            cause: JsSIP_C.causes.WEBRTC_ERROR,\n            status_code: 500,\n            reason_phrase: 'Media Renegotiation Failed'\n          });\n        }\n      };\n\n      this._setLocalMediaStatus();\n\n      if (options.useUpdate) {\n        this._sendUpdate({\n          sdpOffer: true,\n          eventHandlers: eventHandlers,\n          rtcOfferConstraints: rtcOfferConstraints,\n          extraHeaders: options.extraHeaders\n        });\n      } else {\n        this._sendReinvite({\n          eventHandlers: eventHandlers,\n          rtcOfferConstraints: rtcOfferConstraints,\n          extraHeaders: options.extraHeaders\n        });\n      }\n\n      return true;\n    }\n    /**\n     * Refer\n     */\n\n  }, {\n    key: \"refer\",\n    value: function refer(target, options) {\n      var _this9 = this;\n\n      logger.debug('refer()');\n      var originalTarget = target;\n\n      if (this._status !== C.STATUS_WAITING_FOR_ACK && this._status !== C.STATUS_CONFIRMED) {\n        return false;\n      } // Check target validity.\n\n\n      target = this._ua.normalizeTarget(target);\n\n      if (!target) {\n        throw new TypeError(\"Invalid target: \".concat(originalTarget));\n      }\n\n      var referSubscriber = new RTCSession_ReferSubscriber(this);\n      referSubscriber.sendRefer(target, options); // Store in the map.\n\n      var id = referSubscriber.id;\n      this._referSubscribers[id] = referSubscriber; // Listen for ending events so we can remove it from the map.\n\n      referSubscriber.on('requestFailed', function () {\n        delete _this9._referSubscribers[id];\n      });\n      referSubscriber.on('accepted', function () {\n        delete _this9._referSubscribers[id];\n      });\n      referSubscriber.on('failed', function () {\n        delete _this9._referSubscribers[id];\n      });\n      return referSubscriber;\n    }\n    /**\n     * Send a generic in-dialog Request\n     */\n\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(method, options) {\n      logger.debug('sendRequest()');\n      return this._dialog.sendRequest(method, options);\n    }\n    /**\n     * In dialog Request Reception\n     */\n\n  }, {\n    key: \"receiveRequest\",\n    value: function receiveRequest(request) {\n      var _this10 = this;\n\n      logger.debug('receiveRequest()');\n\n      if (request.method === JsSIP_C.CANCEL) {\n        /* RFC3261 15 States that a UAS may have accepted an invitation while a CANCEL\n        * was in progress and that the UAC MAY continue with the session established by\n        * any 2xx response, or MAY terminate with BYE. JsSIP does continue with the\n        * established session. So the CANCEL is processed only if the session is not yet\n        * established.\n        */\n\n        /*\n        * Terminate the whole session in case the user didn't accept (or yet send the answer)\n        * nor reject the request opening the session.\n        */\n        if (this._status === C.STATUS_WAITING_FOR_ANSWER || this._status === C.STATUS_ANSWERED) {\n          this._status = C.STATUS_CANCELED;\n\n          this._request.reply(487);\n\n          this._failed('remote', request, JsSIP_C.causes.CANCELED);\n        }\n      } else {\n        // Requests arriving here are in-dialog requests.\n        switch (request.method) {\n          case JsSIP_C.ACK:\n            if (this._status !== C.STATUS_WAITING_FOR_ACK) {\n              return;\n            } // Update signaling status.\n\n\n            this._status = C.STATUS_CONFIRMED;\n            clearTimeout(this._timers.ackTimer);\n            clearTimeout(this._timers.invite2xxTimer);\n\n            if (this._late_sdp) {\n              if (!request.body) {\n                this.terminate({\n                  cause: JsSIP_C.causes.MISSING_SDP,\n                  status_code: 400\n                });\n                break;\n              }\n\n              var e = {\n                originator: 'remote',\n                type: 'answer',\n                sdp: request.body\n              };\n              logger.debug('emit \"sdp\"');\n              this.emit('sdp', e);\n              var answer = new RTCSessionDescription({\n                type: 'answer',\n                sdp: e.sdp\n              });\n              this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n                return _this10._connection.setRemoteDescription(answer);\n              }).then(function () {\n                if (!_this10._is_confirmed) {\n                  _this10._confirmed('remote', request);\n                }\n              })[\"catch\"](function (error) {\n                _this10.terminate({\n                  cause: JsSIP_C.causes.BAD_MEDIA_DESCRIPTION,\n                  status_code: 488\n                });\n\n                logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n                _this10.emit('peerconnection:setremotedescriptionfailed', error);\n              });\n            } else if (!this._is_confirmed) {\n              this._confirmed('remote', request);\n            }\n\n            break;\n\n          case JsSIP_C.BYE:\n            if (this._status === C.STATUS_CONFIRMED || this._status === C.STATUS_WAITING_FOR_ACK) {\n              request.reply(200);\n\n              this._ended('remote', request, JsSIP_C.causes.BYE);\n            } else if (this._status === C.STATUS_INVITE_RECEIVED || this._status === C.STATUS_WAITING_FOR_ANSWER) {\n              request.reply(200);\n\n              this._request.reply(487, 'BYE Received');\n\n              this._ended('remote', request, JsSIP_C.causes.BYE);\n            } else {\n              request.reply(403, 'Wrong Status');\n            }\n\n            break;\n\n          case JsSIP_C.INVITE:\n            if (this._status === C.STATUS_CONFIRMED) {\n              if (request.hasHeader('replaces')) {\n                this._receiveReplaces(request);\n              } else {\n                this._receiveReinvite(request);\n              }\n            } else {\n              request.reply(403, 'Wrong Status');\n            }\n\n            break;\n\n          case JsSIP_C.INFO:\n            if (this._status === C.STATUS_1XX_RECEIVED || this._status === C.STATUS_WAITING_FOR_ANSWER || this._status === C.STATUS_ANSWERED || this._status === C.STATUS_WAITING_FOR_ACK || this._status === C.STATUS_CONFIRMED) {\n              var contentType = request.hasHeader('Content-Type') ? request.getHeader('Content-Type').toLowerCase() : undefined;\n\n              if (contentType && contentType.match(/^application\\/dtmf-relay/i)) {\n                new RTCSession_DTMF(this).init_incoming(request);\n              } else if (contentType !== undefined) {\n                new RTCSession_Info(this).init_incoming(request);\n              } else {\n                request.reply(415);\n              }\n            } else {\n              request.reply(403, 'Wrong Status');\n            }\n\n            break;\n\n          case JsSIP_C.UPDATE:\n            if (this._status === C.STATUS_CONFIRMED) {\n              this._receiveUpdate(request);\n            } else {\n              request.reply(403, 'Wrong Status');\n            }\n\n            break;\n\n          case JsSIP_C.REFER:\n            if (this._status === C.STATUS_CONFIRMED) {\n              this._receiveRefer(request);\n            } else {\n              request.reply(403, 'Wrong Status');\n            }\n\n            break;\n\n          case JsSIP_C.NOTIFY:\n            if (this._status === C.STATUS_CONFIRMED) {\n              this._receiveNotify(request);\n            } else {\n              request.reply(403, 'Wrong Status');\n            }\n\n            break;\n\n          default:\n            request.reply(501);\n        }\n      }\n    }\n    /**\n     * Session Callbacks\n     */\n\n  }, {\n    key: \"onTransportError\",\n    value: function onTransportError() {\n      logger.warn('onTransportError()');\n\n      if (this._status !== C.STATUS_TERMINATED) {\n        this.terminate({\n          status_code: 500,\n          reason_phrase: JsSIP_C.causes.CONNECTION_ERROR,\n          cause: JsSIP_C.causes.CONNECTION_ERROR\n        });\n      }\n    }\n  }, {\n    key: \"onRequestTimeout\",\n    value: function onRequestTimeout() {\n      logger.warn('onRequestTimeout()');\n\n      if (this._status !== C.STATUS_TERMINATED) {\n        this.terminate({\n          status_code: 408,\n          reason_phrase: JsSIP_C.causes.REQUEST_TIMEOUT,\n          cause: JsSIP_C.causes.REQUEST_TIMEOUT\n        });\n      }\n    }\n  }, {\n    key: \"onDialogError\",\n    value: function onDialogError() {\n      logger.warn('onDialogError()');\n\n      if (this._status !== C.STATUS_TERMINATED) {\n        this.terminate({\n          status_code: 500,\n          reason_phrase: JsSIP_C.causes.DIALOG_ERROR,\n          cause: JsSIP_C.causes.DIALOG_ERROR\n        });\n      }\n    } // Called from DTMF handler.\n\n  }, {\n    key: \"newDTMF\",\n    value: function newDTMF(data) {\n      logger.debug('newDTMF()');\n      this.emit('newDTMF', data);\n    } // Called from Info handler.\n\n  }, {\n    key: \"newInfo\",\n    value: function newInfo(data) {\n      logger.debug('newInfo()');\n      this.emit('newInfo', data);\n    }\n    /**\n     * Check if RTCSession is ready for an outgoing re-INVITE or UPDATE with SDP.\n     */\n\n  }, {\n    key: \"_isReadyToReOffer\",\n    value: function _isReadyToReOffer() {\n      if (!this._rtcReady) {\n        logger.debug('_isReadyToReOffer() | internal WebRTC status not ready');\n        return false;\n      } // No established yet.\n\n\n      if (!this._dialog) {\n        logger.debug('_isReadyToReOffer() | session not established yet');\n        return false;\n      } // Another INVITE transaction is in progress.\n\n\n      if (this._dialog.uac_pending_reply === true || this._dialog.uas_pending_reply === true) {\n        logger.debug('_isReadyToReOffer() | there is another INVITE/UPDATE transaction in progress');\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_close\",\n    value: function _close() {\n      logger.debug('close()'); // Close local MediaStream if it was not given by the user.\n\n      if (this._localMediaStream && this._localMediaStreamLocallyGenerated) {\n        logger.debug('close() | closing local MediaStream');\n        Utils.closeMediaStream(this._localMediaStream);\n      }\n\n      if (this._status === C.STATUS_TERMINATED) {\n        return;\n      }\n\n      this._status = C.STATUS_TERMINATED; // Terminate RTC.\n\n      if (this._connection) {\n        try {\n          this._connection.close();\n        } catch (error) {\n          logger.warn('close() | error closing the RTCPeerConnection: %o', error);\n        }\n      } // Terminate signaling.\n      // Clear SIP timers.\n\n\n      for (var timer in this._timers) {\n        if (Object.prototype.hasOwnProperty.call(this._timers, timer)) {\n          clearTimeout(this._timers[timer]);\n        }\n      } // Clear Session Timers.\n\n\n      clearTimeout(this._sessionTimers.timer); // Terminate confirmed dialog.\n\n      if (this._dialog) {\n        this._dialog.terminate();\n\n        delete this._dialog;\n      } // Terminate early dialogs.\n\n\n      for (var dialog in this._earlyDialogs) {\n        if (Object.prototype.hasOwnProperty.call(this._earlyDialogs, dialog)) {\n          this._earlyDialogs[dialog].terminate();\n\n          delete this._earlyDialogs[dialog];\n        }\n      } // Terminate REFER subscribers.\n\n\n      for (var subscriber in this._referSubscribers) {\n        if (Object.prototype.hasOwnProperty.call(this._referSubscribers, subscriber)) {\n          delete this._referSubscribers[subscriber];\n        }\n      }\n\n      this._ua.destroyRTCSession(this);\n    }\n    /**\n     * Private API.\n     */\n\n    /**\n     * RFC3261 13.3.1.4\n     * Response retransmissions cannot be accomplished by transaction layer\n     *  since it is destroyed when receiving the first 2xx answer\n     */\n\n  }, {\n    key: \"_setInvite2xxTimer\",\n    value: function _setInvite2xxTimer(request, body) {\n      var timeout = Timers.T1;\n\n      function invite2xxRetransmission() {\n        if (this._status !== C.STATUS_WAITING_FOR_ACK) {\n          return;\n        }\n\n        request.reply(200, null, [\"Contact: \".concat(this._contact)], body);\n\n        if (timeout < Timers.T2) {\n          timeout = timeout * 2;\n\n          if (timeout > Timers.T2) {\n            timeout = Timers.T2;\n          }\n        }\n\n        this._timers.invite2xxTimer = setTimeout(invite2xxRetransmission.bind(this), timeout);\n      }\n\n      this._timers.invite2xxTimer = setTimeout(invite2xxRetransmission.bind(this), timeout);\n    }\n    /**\n     * RFC3261 14.2\n     * If a UAS generates a 2xx response and never receives an ACK,\n     *  it SHOULD generate a BYE to terminate the dialog.\n     */\n\n  }, {\n    key: \"_setACKTimer\",\n    value: function _setACKTimer() {\n      var _this11 = this;\n\n      this._timers.ackTimer = setTimeout(function () {\n        if (_this11._status === C.STATUS_WAITING_FOR_ACK) {\n          logger.debug('no ACK received, terminating the session');\n          clearTimeout(_this11._timers.invite2xxTimer);\n\n          _this11.sendRequest(JsSIP_C.BYE);\n\n          _this11._ended('remote', null, JsSIP_C.causes.NO_ACK);\n        }\n      }, Timers.TIMER_H);\n    }\n  }, {\n    key: \"_createRTCConnection\",\n    value: function _createRTCConnection(pcConfig, rtcConstraints) {\n      var _this12 = this;\n\n      this._connection = new RTCPeerConnection(pcConfig, rtcConstraints);\n\n      this._connection.addEventListener('iceconnectionstatechange', function () {\n        var state = _this12._connection.iceConnectionState; // TODO: Do more with different states.\n\n        if (state === 'failed') {\n          _this12.terminate({\n            cause: JsSIP_C.causes.RTP_TIMEOUT,\n            status_code: 408,\n            reason_phrase: JsSIP_C.causes.RTP_TIMEOUT\n          });\n        }\n      });\n\n      logger.debug('emit \"peerconnection\"');\n      this.emit('peerconnection', {\n        peerconnection: this._connection\n      });\n    }\n  }, {\n    key: \"_createLocalDescription\",\n    value: function _createLocalDescription(type, constraints) {\n      var _this13 = this;\n\n      logger.debug('createLocalDescription()');\n      if (type !== 'offer' && type !== 'answer') throw new Error(\"createLocalDescription() | invalid type \\\"\".concat(type, \"\\\"\"));\n      var connection = this._connection;\n      this._rtcReady = false;\n      return Promise.resolve() // Create Offer or Answer.\n      .then(function () {\n        if (type === 'offer') {\n          return connection.createOffer(constraints)[\"catch\"](function (error) {\n            logger.warn('emit \"peerconnection:createofferfailed\" [error:%o]', error);\n\n            _this13.emit('peerconnection:createofferfailed', error);\n\n            return Promise.reject(error);\n          });\n        } else {\n          return connection.createAnswer(constraints)[\"catch\"](function (error) {\n            logger.warn('emit \"peerconnection:createanswerfailed\" [error:%o]', error);\n\n            _this13.emit('peerconnection:createanswerfailed', error);\n\n            return Promise.reject(error);\n          });\n        }\n      }) // Set local description.\n      .then(function (desc) {\n        return connection.setLocalDescription(desc)[\"catch\"](function (error) {\n          _this13._rtcReady = true;\n          logger.warn('emit \"peerconnection:setlocaldescriptionfailed\" [error:%o]', error);\n\n          _this13.emit('peerconnection:setlocaldescriptionfailed', error);\n\n          return Promise.reject(error);\n        });\n      }).then(function () {\n        // Resolve right away if 'pc.iceGatheringState' is 'complete'.\n        if (connection.iceGatheringState === 'complete' && (!constraints || !constraints.iceRestart)) {\n          _this13._rtcReady = true;\n          var e = {\n            originator: 'local',\n            type: type,\n            sdp: connection.localDescription.sdp\n          };\n          logger.debug('emit \"sdp\"');\n\n          _this13.emit('sdp', e);\n\n          return Promise.resolve(e.sdp);\n        } // Add 'pc.onicencandidate' event handler to resolve on last candidate.\n\n\n        return new Promise(function (resolve) {\n          var finished = false;\n          var iceCandidateListener;\n          var iceGatheringStateListener;\n\n          var ready = function ready() {\n            connection.removeEventListener('icecandidate', iceCandidateListener);\n            connection.removeEventListener('icegatheringstatechange', iceGatheringStateListener);\n            finished = true;\n            _this13._rtcReady = true;\n            var e = {\n              originator: 'local',\n              type: type,\n              sdp: connection.localDescription.sdp\n            };\n            logger.debug('emit \"sdp\"');\n\n            _this13.emit('sdp', e);\n\n            resolve(e.sdp);\n          };\n\n          connection.addEventListener('icecandidate', iceCandidateListener = function iceCandidateListener(event) {\n            var candidate = event.candidate;\n\n            if (candidate) {\n              _this13.emit('icecandidate', {\n                candidate: candidate,\n                ready: ready\n              });\n            } else if (!finished) {\n              ready();\n            }\n          });\n          connection.addEventListener('icegatheringstatechange', iceGatheringStateListener = function iceGatheringStateListener() {\n            if (connection.iceGatheringState === 'complete' && !finished) {\n              ready();\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Dialog Management\n     */\n\n  }, {\n    key: \"_createDialog\",\n    value: function _createDialog(message, type, early) {\n      var local_tag = type === 'UAS' ? message.to_tag : message.from_tag;\n      var remote_tag = type === 'UAS' ? message.from_tag : message.to_tag;\n      var id = message.call_id + local_tag + remote_tag;\n      var early_dialog = this._earlyDialogs[id]; // Early Dialog.\n\n      if (early) {\n        if (early_dialog) {\n          return true;\n        } else {\n          early_dialog = new Dialog(this, message, type, Dialog.C.STATUS_EARLY); // Dialog has been successfully created.\n\n          if (early_dialog.error) {\n            logger.debug(early_dialog.error);\n\n            this._failed('remote', message, JsSIP_C.causes.INTERNAL_ERROR);\n\n            return false;\n          } else {\n            this._earlyDialogs[id] = early_dialog;\n            return true;\n          }\n        }\n      } // Confirmed Dialog.\n      else {\n          this._from_tag = message.from_tag;\n          this._to_tag = message.to_tag; // In case the dialog is in _early_ state, update it.\n\n          if (early_dialog) {\n            early_dialog.update(message, type);\n            this._dialog = early_dialog;\n            delete this._earlyDialogs[id];\n            return true;\n          } // Otherwise, create a _confirmed_ dialog.\n\n\n          var dialog = new Dialog(this, message, type);\n\n          if (dialog.error) {\n            logger.debug(dialog.error);\n\n            this._failed('remote', message, JsSIP_C.causes.INTERNAL_ERROR);\n\n            return false;\n          } else {\n            this._dialog = dialog;\n            return true;\n          }\n        }\n    }\n    /**\n     * In dialog INVITE Reception\n     */\n\n  }, {\n    key: \"_receiveReinvite\",\n    value: function _receiveReinvite(request) {\n      var _this14 = this;\n\n      logger.debug('receiveReinvite()');\n      var contentType = request.hasHeader('Content-Type') ? request.getHeader('Content-Type').toLowerCase() : undefined;\n      var data = {\n        request: request,\n        callback: undefined,\n        reject: reject.bind(this)\n      };\n      var rejected = false;\n\n      function reject() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        rejected = true;\n        var status_code = options.status_code || 403;\n        var reason_phrase = options.reason_phrase || '';\n        var extraHeaders = Utils.cloneArray(options.extraHeaders);\n\n        if (this._status !== C.STATUS_CONFIRMED) {\n          return false;\n        }\n\n        if (status_code < 300 || status_code >= 700) {\n          throw new TypeError(\"Invalid status_code: \".concat(status_code));\n        }\n\n        request.reply(status_code, reason_phrase, extraHeaders);\n      } // Emit 'reinvite'.\n\n\n      this.emit('reinvite', data);\n\n      if (rejected) {\n        return;\n      }\n\n      this._late_sdp = false; // Request without SDP.\n\n      if (!request.body) {\n        this._late_sdp = true;\n\n        if (this._remoteHold) {\n          this._remoteHold = false;\n\n          this._onunhold('remote');\n        }\n\n        this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n          return _this14._createLocalDescription('offer', _this14._rtcOfferConstraints);\n        }).then(function (sdp) {\n          sendAnswer.call(_this14, sdp);\n        })[\"catch\"](function () {\n          request.reply(500);\n        });\n        return;\n      } // Request with SDP.\n\n\n      if (contentType !== 'application/sdp') {\n        logger.debug('invalid Content-Type');\n        request.reply(415);\n        return;\n      }\n\n      this._processInDialogSdpOffer(request) // Send answer.\n      .then(function (desc) {\n        if (_this14._status === C.STATUS_TERMINATED) {\n          return;\n        }\n\n        sendAnswer.call(_this14, desc);\n      })[\"catch\"](function (error) {\n        logger.warn(error);\n      });\n\n      function sendAnswer(desc) {\n        var _this15 = this;\n\n        var extraHeaders = [\"Contact: \".concat(this._contact)];\n\n        this._handleSessionTimersInIncomingRequest(request, extraHeaders);\n\n        if (this._late_sdp) {\n          desc = this._mangleOffer(desc);\n        }\n\n        request.reply(200, null, extraHeaders, desc, function () {\n          _this15._status = C.STATUS_WAITING_FOR_ACK;\n\n          _this15._setInvite2xxTimer(request, desc);\n\n          _this15._setACKTimer();\n        }); // If callback is given execute it.\n\n        if (typeof data.callback === 'function') {\n          data.callback();\n        }\n      }\n    }\n    /**\n     * In dialog UPDATE Reception\n     */\n\n  }, {\n    key: \"_receiveUpdate\",\n    value: function _receiveUpdate(request) {\n      var _this16 = this;\n\n      logger.debug('receiveUpdate()');\n      var contentType = request.hasHeader('Content-Type') ? request.getHeader('Content-Type').toLowerCase() : undefined;\n      var data = {\n        request: request,\n        callback: undefined,\n        reject: reject.bind(this)\n      };\n      var rejected = false;\n\n      function reject() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        rejected = true;\n        var status_code = options.status_code || 403;\n        var reason_phrase = options.reason_phrase || '';\n        var extraHeaders = Utils.cloneArray(options.extraHeaders);\n\n        if (this._status !== C.STATUS_CONFIRMED) {\n          return false;\n        }\n\n        if (status_code < 300 || status_code >= 700) {\n          throw new TypeError(\"Invalid status_code: \".concat(status_code));\n        }\n\n        request.reply(status_code, reason_phrase, extraHeaders);\n      } // Emit 'update'.\n\n\n      this.emit('update', data);\n\n      if (rejected) {\n        return;\n      }\n\n      if (!request.body) {\n        sendAnswer.call(this, null);\n        return;\n      }\n\n      if (contentType !== 'application/sdp') {\n        logger.debug('invalid Content-Type');\n        request.reply(415);\n        return;\n      }\n\n      this._processInDialogSdpOffer(request) // Send answer.\n      .then(function (desc) {\n        if (_this16._status === C.STATUS_TERMINATED) {\n          return;\n        }\n\n        sendAnswer.call(_this16, desc);\n      })[\"catch\"](function (error) {\n        logger.warn(error);\n      });\n\n      function sendAnswer(desc) {\n        var extraHeaders = [\"Contact: \".concat(this._contact)];\n\n        this._handleSessionTimersInIncomingRequest(request, extraHeaders);\n\n        request.reply(200, null, extraHeaders, desc); // If callback is given execute it.\n\n        if (typeof data.callback === 'function') {\n          data.callback();\n        }\n      }\n    }\n  }, {\n    key: \"_processInDialogSdpOffer\",\n    value: function _processInDialogSdpOffer(request) {\n      var _this17 = this;\n\n      logger.debug('_processInDialogSdpOffer()');\n      var sdp = request.parseSDP();\n      var hold = false;\n\n      var _iterator4 = _createForOfIteratorHelper(sdp.media),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var m = _step4.value;\n\n          if (holdMediaTypes.indexOf(m.type) === -1) {\n            continue;\n          }\n\n          var direction = m.direction || sdp.direction || 'sendrecv';\n\n          if (direction === 'sendonly' || direction === 'inactive') {\n            hold = true;\n          } // If at least one of the streams is active don't emit 'hold'.\n          else {\n              hold = false;\n              break;\n            }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      var e = {\n        originator: 'remote',\n        type: 'offer',\n        sdp: request.body\n      };\n      logger.debug('emit \"sdp\"');\n      this.emit('sdp', e);\n      var offer = new RTCSessionDescription({\n        type: 'offer',\n        sdp: e.sdp\n      });\n      this._connectionPromiseQueue = this._connectionPromiseQueue // Set remote description.\n      .then(function () {\n        if (_this17._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        return _this17._connection.setRemoteDescription(offer)[\"catch\"](function (error) {\n          request.reply(488);\n          logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n          _this17.emit('peerconnection:setremotedescriptionfailed', error);\n\n          throw error;\n        });\n      }).then(function () {\n        if (_this17._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        if (_this17._remoteHold === true && hold === false) {\n          _this17._remoteHold = false;\n\n          _this17._onunhold('remote');\n        } else if (_this17._remoteHold === false && hold === true) {\n          _this17._remoteHold = true;\n\n          _this17._onhold('remote');\n        }\n      }) // Create local description.\n      .then(function () {\n        if (_this17._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        return _this17._createLocalDescription('answer', _this17._rtcAnswerConstraints)[\"catch\"](function (error) {\n          request.reply(500);\n          logger.warn('emit \"peerconnection:createtelocaldescriptionfailed\" [error:%o]', error);\n          throw error;\n        });\n      })[\"catch\"](function (error) {\n        logger.warn('_processInDialogSdpOffer() failed [error: %o]', error);\n      });\n      return this._connectionPromiseQueue;\n    }\n    /**\n     * In dialog Refer Reception\n     */\n\n  }, {\n    key: \"_receiveRefer\",\n    value: function _receiveRefer(request) {\n      var _this18 = this;\n\n      logger.debug('receiveRefer()');\n\n      if (!request.refer_to) {\n        logger.debug('no Refer-To header field present in REFER');\n        request.reply(400);\n        return;\n      }\n\n      if (request.refer_to.uri.scheme !== JsSIP_C.SIP) {\n        logger.debug('Refer-To header field points to a non-SIP URI scheme');\n        request.reply(416);\n        return;\n      } // Reply before the transaction timer expires.\n\n\n      request.reply(202);\n      var notifier = new RTCSession_ReferNotifier(this, request.cseq);\n      logger.debug('emit \"refer\"'); // Emit 'refer'.\n\n      this.emit('refer', {\n        request: request,\n        accept: function accept(initCallback, options) {\n          _accept.call(_this18, initCallback, options);\n        },\n        reject: function reject() {\n          _reject.call(_this18);\n        }\n      });\n\n      function _accept(initCallback) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        initCallback = typeof initCallback === 'function' ? initCallback : null;\n\n        if (this._status !== C.STATUS_WAITING_FOR_ACK && this._status !== C.STATUS_CONFIRMED) {\n          return false;\n        }\n\n        var session = new RTCSession(this._ua);\n        session.on('progress', function (_ref2) {\n          var response = _ref2.response;\n          notifier.notify(response.status_code, response.reason_phrase);\n        });\n        session.on('accepted', function (_ref3) {\n          var response = _ref3.response;\n          notifier.notify(response.status_code, response.reason_phrase);\n        });\n        session.on('_failed', function (_ref4) {\n          var message = _ref4.message,\n              cause = _ref4.cause;\n\n          if (message) {\n            notifier.notify(message.status_code, message.reason_phrase);\n          } else {\n            notifier.notify(487, cause);\n          }\n        }); // Consider the Replaces header present in the Refer-To URI.\n\n        if (request.refer_to.uri.hasHeader('replaces')) {\n          var replaces = decodeURIComponent(request.refer_to.uri.getHeader('replaces'));\n          options.extraHeaders = Utils.cloneArray(options.extraHeaders);\n          options.extraHeaders.push(\"Replaces: \".concat(replaces));\n        }\n\n        session.connect(request.refer_to.uri.toAor(), options, initCallback);\n      }\n\n      function _reject() {\n        notifier.notify(603);\n      }\n    }\n    /**\n     * In dialog Notify Reception\n     */\n\n  }, {\n    key: \"_receiveNotify\",\n    value: function _receiveNotify(request) {\n      logger.debug('receiveNotify()');\n\n      if (!request.event) {\n        request.reply(400);\n      }\n\n      switch (request.event.event) {\n        case 'refer':\n          {\n            var id;\n            var referSubscriber;\n\n            if (request.event.params && request.event.params.id) {\n              id = request.event.params.id;\n              referSubscriber = this._referSubscribers[id];\n            } else if (Object.keys(this._referSubscribers).length === 1) {\n              referSubscriber = this._referSubscribers[Object.keys(this._referSubscribers)[0]];\n            } else {\n              request.reply(400, 'Missing event id parameter');\n              return;\n            }\n\n            if (!referSubscriber) {\n              request.reply(481, 'Subscription does not exist');\n              return;\n            }\n\n            referSubscriber.receiveNotify(request);\n            request.reply(200);\n            break;\n          }\n\n        default:\n          {\n            request.reply(489);\n          }\n      }\n    }\n    /**\n     * INVITE with Replaces Reception\n     */\n\n  }, {\n    key: \"_receiveReplaces\",\n    value: function _receiveReplaces(request) {\n      var _this20 = this;\n\n      logger.debug('receiveReplaces()');\n\n      function _accept2(initCallback) {\n        var _this19 = this;\n\n        if (this._status !== C.STATUS_WAITING_FOR_ACK && this._status !== C.STATUS_CONFIRMED) {\n          return false;\n        }\n\n        var session = new RTCSession(this._ua); // Terminate the current session when the new one is confirmed.\n\n        session.on('confirmed', function () {\n          _this19.terminate();\n        });\n        session.init_incoming(request, initCallback);\n      }\n\n      function _reject2() {\n        logger.debug('Replaced INVITE rejected by the user');\n        request.reply(486);\n      } // Emit 'replace'.\n\n\n      this.emit('replaces', {\n        request: request,\n        accept: function accept(initCallback) {\n          _accept2.call(_this20, initCallback);\n        },\n        reject: function reject() {\n          _reject2.call(_this20);\n        }\n      });\n    }\n    /**\n     * Initial Request Sender\n     */\n\n  }, {\n    key: \"_sendInitialRequest\",\n    value: function _sendInitialRequest(mediaConstraints, rtcOfferConstraints, mediaStream) {\n      var _this21 = this;\n\n      var request_sender = new RequestSender(this._ua, this._request, {\n        onRequestTimeout: function onRequestTimeout() {\n          _this21.onRequestTimeout();\n        },\n        onTransportError: function onTransportError() {\n          _this21.onTransportError();\n        },\n        // Update the request on authentication.\n        onAuthenticated: function onAuthenticated(request) {\n          _this21._request = request;\n        },\n        onReceiveResponse: function onReceiveResponse(response) {\n          _this21._receiveInviteResponse(response);\n        }\n      }); // This Promise is resolved within the next iteration, so the app has now\n      // a chance to set events such as 'peerconnection' and 'connecting'.\n\n      Promise.resolve() // Get a stream if required.\n      .then(function () {\n        // A stream is given, let the app set events such as 'peerconnection' and 'connecting'.\n        if (mediaStream) {\n          return mediaStream;\n        } // Request for user media access.\n        else if (mediaConstraints.audio || mediaConstraints.video) {\n            _this21._localMediaStreamLocallyGenerated = true;\n            return navigator.mediaDevices.getUserMedia(mediaConstraints)[\"catch\"](function (error) {\n              if (_this21._status === C.STATUS_TERMINATED) {\n                throw new Error('terminated');\n              }\n\n              _this21._failed('local', null, JsSIP_C.causes.USER_DENIED_MEDIA_ACCESS);\n\n              logger.warn('emit \"getusermediafailed\" [error:%o]', error);\n\n              _this21.emit('getusermediafailed', error);\n\n              throw error;\n            });\n          }\n      }).then(function (stream) {\n        if (_this21._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        _this21._localMediaStream = stream;\n\n        if (stream) {\n          stream.getTracks().forEach(function (track) {\n            _this21._connection.addTrack(track, stream);\n          });\n        } // TODO: should this be triggered here?\n\n\n        _this21._connecting(_this21._request);\n\n        return _this21._createLocalDescription('offer', rtcOfferConstraints)[\"catch\"](function (error) {\n          _this21._failed('local', null, JsSIP_C.causes.WEBRTC_ERROR);\n\n          throw error;\n        });\n      }).then(function (desc) {\n        if (_this21._is_canceled || _this21._status === C.STATUS_TERMINATED) {\n          throw new Error('terminated');\n        }\n\n        _this21._request.body = desc;\n        _this21._status = C.STATUS_INVITE_SENT;\n        logger.debug('emit \"sending\" [request:%o]', _this21._request); // Emit 'sending' so the app can mangle the body before the request is sent.\n\n        _this21.emit('sending', {\n          request: _this21._request\n        });\n\n        request_sender.send();\n      })[\"catch\"](function (error) {\n        if (_this21._status === C.STATUS_TERMINATED) {\n          return;\n        }\n\n        logger.warn(error);\n      });\n    }\n    /**\n     * Get DTMF RTCRtpSender.\n     */\n\n  }, {\n    key: \"_getDTMFRTPSender\",\n    value: function _getDTMFRTPSender() {\n      var sender = this._connection.getSenders().find(function (rtpSender) {\n        return rtpSender.track && rtpSender.track.kind === 'audio';\n      });\n\n      if (!(sender && sender.dtmf)) {\n        logger.warn('sendDTMF() | no local audio track to send DTMF with');\n        return;\n      }\n\n      return sender.dtmf;\n    }\n    /**\n     * Reception of Response for Initial INVITE\n     */\n\n  }, {\n    key: \"_receiveInviteResponse\",\n    value: function _receiveInviteResponse(response) {\n      var _this22 = this;\n\n      logger.debug('receiveInviteResponse()'); // Handle 2XX retransmissions and responses from forked requests.\n\n      if (this._dialog && response.status_code >= 200 && response.status_code <= 299) {\n        /*\n         * If it is a retransmission from the endpoint that established\n         * the dialog, send an ACK\n         */\n        if (this._dialog.id.call_id === response.call_id && this._dialog.id.local_tag === response.from_tag && this._dialog.id.remote_tag === response.to_tag) {\n          this.sendRequest(JsSIP_C.ACK);\n          return;\n        } // If not, send an ACK  and terminate.\n        else {\n            var dialog = new Dialog(this, response, 'UAC');\n\n            if (dialog.error !== undefined) {\n              logger.debug(dialog.error);\n              return;\n            }\n\n            this.sendRequest(JsSIP_C.ACK);\n            this.sendRequest(JsSIP_C.BYE);\n            return;\n          }\n      } // Proceed to cancellation if the user requested.\n\n\n      if (this._is_canceled) {\n        if (response.status_code >= 100 && response.status_code < 200) {\n          this._request.cancel(this._cancel_reason);\n        } else if (response.status_code >= 200 && response.status_code < 299) {\n          this._acceptAndTerminate(response);\n        }\n\n        return;\n      }\n\n      if (this._status !== C.STATUS_INVITE_SENT && this._status !== C.STATUS_1XX_RECEIVED) {\n        return;\n      }\n\n      switch (true) {\n        case /^100$/.test(response.status_code):\n          this._status = C.STATUS_1XX_RECEIVED;\n          break;\n\n        case /^1[0-9]{2}$/.test(response.status_code):\n          {\n            // Do nothing with 1xx responses without To tag.\n            if (!response.to_tag) {\n              logger.debug('1xx response received without to tag');\n              break;\n            } // Create Early Dialog if 1XX comes with contact.\n\n\n            if (response.hasHeader('contact')) {\n              // An error on dialog creation will fire 'failed' event.\n              if (!this._createDialog(response, 'UAC', true)) {\n                break;\n              }\n            }\n\n            this._status = C.STATUS_1XX_RECEIVED;\n\n            if (!response.body) {\n              this._progress('remote', response);\n\n              break;\n            }\n\n            var e = {\n              originator: 'remote',\n              type: 'answer',\n              sdp: response.body\n            };\n            logger.debug('emit \"sdp\"');\n            this.emit('sdp', e);\n            var answer = new RTCSessionDescription({\n              type: 'answer',\n              sdp: e.sdp\n            });\n            this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n              return _this22._connection.setRemoteDescription(answer);\n            }).then(function () {\n              return _this22._progress('remote', response);\n            })[\"catch\"](function (error) {\n              logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n              _this22.emit('peerconnection:setremotedescriptionfailed', error);\n            });\n            break;\n          }\n\n        case /^2[0-9]{2}$/.test(response.status_code):\n          {\n            this._status = C.STATUS_CONFIRMED;\n\n            if (!response.body) {\n              this._acceptAndTerminate(response, 400, JsSIP_C.causes.MISSING_SDP);\n\n              this._failed('remote', response, JsSIP_C.causes.BAD_MEDIA_DESCRIPTION);\n\n              break;\n            } // An error on dialog creation will fire 'failed' event.\n\n\n            if (!this._createDialog(response, 'UAC')) {\n              break;\n            }\n\n            var _e = {\n              originator: 'remote',\n              type: 'answer',\n              sdp: response.body\n            };\n            logger.debug('emit \"sdp\"');\n            this.emit('sdp', _e);\n\n            var _answer = new RTCSessionDescription({\n              type: 'answer',\n              sdp: _e.sdp\n            });\n\n            this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n              // Be ready for 200 with SDP after a 180/183 with SDP.\n              // We created a SDP 'answer' for it, so check the current signaling state.\n              if (_this22._connection.signalingState === 'stable') {\n                return _this22._connection.createOffer(_this22._rtcOfferConstraints).then(function (offer) {\n                  return _this22._connection.setLocalDescription(offer);\n                })[\"catch\"](function (error) {\n                  _this22._acceptAndTerminate(response, 500, error.toString());\n\n                  _this22._failed('local', response, JsSIP_C.causes.WEBRTC_ERROR);\n                });\n              }\n            }).then(function () {\n              _this22._connection.setRemoteDescription(_answer).then(function () {\n                // Handle Session Timers.\n                _this22._handleSessionTimersInIncomingResponse(response);\n\n                _this22._accepted('remote', response);\n\n                _this22.sendRequest(JsSIP_C.ACK);\n\n                _this22._confirmed('local', null);\n              })[\"catch\"](function (error) {\n                _this22._acceptAndTerminate(response, 488, 'Not Acceptable Here');\n\n                _this22._failed('remote', response, JsSIP_C.causes.BAD_MEDIA_DESCRIPTION);\n\n                logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n                _this22.emit('peerconnection:setremotedescriptionfailed', error);\n              });\n            });\n            break;\n          }\n\n        default:\n          {\n            var cause = Utils.sipErrorCause(response.status_code);\n\n            this._failed('remote', response, cause);\n          }\n      }\n    }\n    /**\n     * Send Re-INVITE\n     */\n\n  }, {\n    key: \"_sendReinvite\",\n    value: function _sendReinvite() {\n      var _this23 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      logger.debug('sendReinvite()');\n      var extraHeaders = Utils.cloneArray(options.extraHeaders);\n      var eventHandlers = Utils.cloneObject(options.eventHandlers);\n      var rtcOfferConstraints = options.rtcOfferConstraints || this._rtcOfferConstraints || null;\n      var succeeded = false;\n      extraHeaders.push(\"Contact: \".concat(this._contact));\n      extraHeaders.push('Content-Type: application/sdp'); // Session Timers.\n\n      if (this._sessionTimers.running) {\n        extraHeaders.push(\"Session-Expires: \".concat(this._sessionTimers.currentExpires, \";refresher=\").concat(this._sessionTimers.refresher ? 'uac' : 'uas'));\n      }\n\n      this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n        return _this23._createLocalDescription('offer', rtcOfferConstraints);\n      }).then(function (sdp) {\n        sdp = _this23._mangleOffer(sdp);\n        var e = {\n          originator: 'local',\n          type: 'offer',\n          sdp: sdp\n        };\n        logger.debug('emit \"sdp\"');\n\n        _this23.emit('sdp', e);\n\n        _this23.sendRequest(JsSIP_C.INVITE, {\n          extraHeaders: extraHeaders,\n          body: sdp,\n          eventHandlers: {\n            onSuccessResponse: function onSuccessResponse(response) {\n              onSucceeded.call(_this23, response);\n              succeeded = true;\n            },\n            onErrorResponse: function onErrorResponse(response) {\n              onFailed.call(_this23, response);\n            },\n            onTransportError: function onTransportError() {\n              _this23.onTransportError(); // Do nothing because session ends.\n\n            },\n            onRequestTimeout: function onRequestTimeout() {\n              _this23.onRequestTimeout(); // Do nothing because session ends.\n\n            },\n            onDialogError: function onDialogError() {\n              _this23.onDialogError(); // Do nothing because session ends.\n\n            }\n          }\n        });\n      })[\"catch\"](function () {\n        onFailed();\n      });\n\n      function onSucceeded(response) {\n        var _this24 = this;\n\n        if (this._status === C.STATUS_TERMINATED) {\n          return;\n        }\n\n        this.sendRequest(JsSIP_C.ACK); // If it is a 2XX retransmission exit now.\n\n        if (succeeded) {\n          return;\n        } // Handle Session Timers.\n\n\n        this._handleSessionTimersInIncomingResponse(response); // Must have SDP answer.\n\n\n        if (!response.body) {\n          onFailed.call(this);\n          return;\n        } else if (!response.hasHeader('Content-Type') || response.getHeader('Content-Type').toLowerCase() !== 'application/sdp') {\n          onFailed.call(this);\n          return;\n        }\n\n        var e = {\n          originator: 'remote',\n          type: 'answer',\n          sdp: response.body\n        };\n        logger.debug('emit \"sdp\"');\n        this.emit('sdp', e);\n        var answer = new RTCSessionDescription({\n          type: 'answer',\n          sdp: e.sdp\n        });\n        this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n          return _this24._connection.setRemoteDescription(answer);\n        }).then(function () {\n          if (eventHandlers.succeeded) {\n            eventHandlers.succeeded(response);\n          }\n        })[\"catch\"](function (error) {\n          onFailed.call(_this24);\n          logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n          _this24.emit('peerconnection:setremotedescriptionfailed', error);\n        });\n      }\n\n      function onFailed(response) {\n        if (eventHandlers.failed) {\n          eventHandlers.failed(response);\n        }\n      }\n    }\n    /**\n     * Send UPDATE\n     */\n\n  }, {\n    key: \"_sendUpdate\",\n    value: function _sendUpdate() {\n      var _this25 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      logger.debug('sendUpdate()');\n      var extraHeaders = Utils.cloneArray(options.extraHeaders);\n      var eventHandlers = Utils.cloneObject(options.eventHandlers);\n      var rtcOfferConstraints = options.rtcOfferConstraints || this._rtcOfferConstraints || null;\n      var sdpOffer = options.sdpOffer || false;\n      var succeeded = false;\n      extraHeaders.push(\"Contact: \".concat(this._contact)); // Session Timers.\n\n      if (this._sessionTimers.running) {\n        extraHeaders.push(\"Session-Expires: \".concat(this._sessionTimers.currentExpires, \";refresher=\").concat(this._sessionTimers.refresher ? 'uac' : 'uas'));\n      }\n\n      if (sdpOffer) {\n        extraHeaders.push('Content-Type: application/sdp');\n        this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n          return _this25._createLocalDescription('offer', rtcOfferConstraints);\n        }).then(function (sdp) {\n          sdp = _this25._mangleOffer(sdp);\n          var e = {\n            originator: 'local',\n            type: 'offer',\n            sdp: sdp\n          };\n          logger.debug('emit \"sdp\"');\n\n          _this25.emit('sdp', e);\n\n          _this25.sendRequest(JsSIP_C.UPDATE, {\n            extraHeaders: extraHeaders,\n            body: sdp,\n            eventHandlers: {\n              onSuccessResponse: function onSuccessResponse(response) {\n                onSucceeded.call(_this25, response);\n                succeeded = true;\n              },\n              onErrorResponse: function onErrorResponse(response) {\n                onFailed.call(_this25, response);\n              },\n              onTransportError: function onTransportError() {\n                _this25.onTransportError(); // Do nothing because session ends.\n\n              },\n              onRequestTimeout: function onRequestTimeout() {\n                _this25.onRequestTimeout(); // Do nothing because session ends.\n\n              },\n              onDialogError: function onDialogError() {\n                _this25.onDialogError(); // Do nothing because session ends.\n\n              }\n            }\n          });\n        })[\"catch\"](function () {\n          onFailed.call(_this25);\n        });\n      } // No SDP.\n      else {\n          this.sendRequest(JsSIP_C.UPDATE, {\n            extraHeaders: extraHeaders,\n            eventHandlers: {\n              onSuccessResponse: function onSuccessResponse(response) {\n                onSucceeded.call(_this25, response);\n              },\n              onErrorResponse: function onErrorResponse(response) {\n                onFailed.call(_this25, response);\n              },\n              onTransportError: function onTransportError() {\n                _this25.onTransportError(); // Do nothing because session ends.\n\n              },\n              onRequestTimeout: function onRequestTimeout() {\n                _this25.onRequestTimeout(); // Do nothing because session ends.\n\n              },\n              onDialogError: function onDialogError() {\n                _this25.onDialogError(); // Do nothing because session ends.\n\n              }\n            }\n          });\n        }\n\n      function onSucceeded(response) {\n        var _this26 = this;\n\n        if (this._status === C.STATUS_TERMINATED) {\n          return;\n        } // If it is a 2XX retransmission exit now.\n\n\n        if (succeeded) {\n          return;\n        } // Handle Session Timers.\n\n\n        this._handleSessionTimersInIncomingResponse(response); // Must have SDP answer.\n\n\n        if (sdpOffer) {\n          if (!response.body) {\n            onFailed.call(this);\n            return;\n          } else if (!response.hasHeader('Content-Type') || response.getHeader('Content-Type').toLowerCase() !== 'application/sdp') {\n            onFailed.call(this);\n            return;\n          }\n\n          var e = {\n            originator: 'remote',\n            type: 'answer',\n            sdp: response.body\n          };\n          logger.debug('emit \"sdp\"');\n          this.emit('sdp', e);\n          var answer = new RTCSessionDescription({\n            type: 'answer',\n            sdp: e.sdp\n          });\n          this._connectionPromiseQueue = this._connectionPromiseQueue.then(function () {\n            return _this26._connection.setRemoteDescription(answer);\n          }).then(function () {\n            if (eventHandlers.succeeded) {\n              eventHandlers.succeeded(response);\n            }\n          })[\"catch\"](function (error) {\n            onFailed.call(_this26);\n            logger.warn('emit \"peerconnection:setremotedescriptionfailed\" [error:%o]', error);\n\n            _this26.emit('peerconnection:setremotedescriptionfailed', error);\n          });\n        } // No SDP answer.\n        else if (eventHandlers.succeeded) {\n            eventHandlers.succeeded(response);\n          }\n      }\n\n      function onFailed(response) {\n        if (eventHandlers.failed) {\n          eventHandlers.failed(response);\n        }\n      }\n    }\n  }, {\n    key: \"_acceptAndTerminate\",\n    value: function _acceptAndTerminate(response, status_code, reason_phrase) {\n      logger.debug('acceptAndTerminate()');\n      var extraHeaders = [];\n\n      if (status_code) {\n        reason_phrase = reason_phrase || JsSIP_C.REASON_PHRASE[status_code] || '';\n        extraHeaders.push(\"Reason: SIP ;cause=\".concat(status_code, \"; text=\\\"\").concat(reason_phrase, \"\\\"\"));\n      } // An error on dialog creation will fire 'failed' event.\n\n\n      if (this._dialog || this._createDialog(response, 'UAC')) {\n        this.sendRequest(JsSIP_C.ACK);\n        this.sendRequest(JsSIP_C.BYE, {\n          extraHeaders: extraHeaders\n        });\n      } // Update session status.\n\n\n      this._status = C.STATUS_TERMINATED;\n    }\n    /**\n     * Correctly set the SDP direction attributes if the call is on local hold\n     */\n\n  }, {\n    key: \"_mangleOffer\",\n    value: function _mangleOffer(sdp) {\n      if (!this._localHold && !this._remoteHold) {\n        return sdp;\n      }\n\n      sdp = sdp_transform.parse(sdp); // Local hold.\n\n      if (this._localHold && !this._remoteHold) {\n        logger.debug('mangleOffer() | me on hold, mangling offer');\n\n        var _iterator5 = _createForOfIteratorHelper(sdp.media),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var m = _step5.value;\n\n            if (holdMediaTypes.indexOf(m.type) === -1) {\n              continue;\n            }\n\n            if (!m.direction) {\n              m.direction = 'sendonly';\n            } else if (m.direction === 'sendrecv') {\n              m.direction = 'sendonly';\n            } else if (m.direction === 'recvonly') {\n              m.direction = 'inactive';\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      } // Local and remote hold.\n      else if (this._localHold && this._remoteHold) {\n          logger.debug('mangleOffer() | both on hold, mangling offer');\n\n          var _iterator6 = _createForOfIteratorHelper(sdp.media),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var _m = _step6.value;\n\n              if (holdMediaTypes.indexOf(_m.type) === -1) {\n                continue;\n              }\n\n              _m.direction = 'inactive';\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n        } // Remote hold.\n        else if (this._remoteHold) {\n            logger.debug('mangleOffer() | remote on hold, mangling offer');\n\n            var _iterator7 = _createForOfIteratorHelper(sdp.media),\n                _step7;\n\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var _m2 = _step7.value;\n\n                if (holdMediaTypes.indexOf(_m2.type) === -1) {\n                  continue;\n                }\n\n                if (!_m2.direction) {\n                  _m2.direction = 'recvonly';\n                } else if (_m2.direction === 'sendrecv') {\n                  _m2.direction = 'recvonly';\n                } else if (_m2.direction === 'recvonly') {\n                  _m2.direction = 'inactive';\n                }\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n          }\n\n      return sdp_transform.write(sdp);\n    }\n  }, {\n    key: \"_setLocalMediaStatus\",\n    value: function _setLocalMediaStatus() {\n      var enableAudio = true,\n          enableVideo = true;\n\n      if (this._localHold || this._remoteHold) {\n        enableAudio = false;\n        enableVideo = false;\n      }\n\n      if (this._audioMuted) {\n        enableAudio = false;\n      }\n\n      if (this._videoMuted) {\n        enableVideo = false;\n      }\n\n      this._toggleMuteAudio(!enableAudio);\n\n      this._toggleMuteVideo(!enableVideo);\n    }\n    /**\n     * Handle SessionTimers for an incoming INVITE or UPDATE.\n     * @param  {IncomingRequest} request\n     * @param  {Array} responseExtraHeaders  Extra headers for the 200 response.\n     */\n\n  }, {\n    key: \"_handleSessionTimersInIncomingRequest\",\n    value: function _handleSessionTimersInIncomingRequest(request, responseExtraHeaders) {\n      if (!this._sessionTimers.enabled) {\n        return;\n      }\n\n      var session_expires_refresher;\n\n      if (request.session_expires && request.session_expires >= JsSIP_C.MIN_SESSION_EXPIRES) {\n        this._sessionTimers.currentExpires = request.session_expires;\n        session_expires_refresher = request.session_expires_refresher || 'uas';\n      } else {\n        this._sessionTimers.currentExpires = this._sessionTimers.defaultExpires;\n        session_expires_refresher = 'uas';\n      }\n\n      responseExtraHeaders.push(\"Session-Expires: \".concat(this._sessionTimers.currentExpires, \";refresher=\").concat(session_expires_refresher));\n      this._sessionTimers.refresher = session_expires_refresher === 'uas';\n\n      this._runSessionTimer();\n    }\n    /**\n     * Handle SessionTimers for an incoming response to INVITE or UPDATE.\n     * @param  {IncomingResponse} response\n     */\n\n  }, {\n    key: \"_handleSessionTimersInIncomingResponse\",\n    value: function _handleSessionTimersInIncomingResponse(response) {\n      if (!this._sessionTimers.enabled) {\n        return;\n      }\n\n      var session_expires_refresher;\n\n      if (response.session_expires && response.session_expires >= JsSIP_C.MIN_SESSION_EXPIRES) {\n        this._sessionTimers.currentExpires = response.session_expires;\n        session_expires_refresher = response.session_expires_refresher || 'uac';\n      } else {\n        this._sessionTimers.currentExpires = this._sessionTimers.defaultExpires;\n        session_expires_refresher = 'uac';\n      }\n\n      this._sessionTimers.refresher = session_expires_refresher === 'uac';\n\n      this._runSessionTimer();\n    }\n  }, {\n    key: \"_runSessionTimer\",\n    value: function _runSessionTimer() {\n      var _this27 = this;\n\n      var expires = this._sessionTimers.currentExpires;\n      this._sessionTimers.running = true;\n      clearTimeout(this._sessionTimers.timer); // I'm the refresher.\n\n      if (this._sessionTimers.refresher) {\n        this._sessionTimers.timer = setTimeout(function () {\n          if (_this27._status === C.STATUS_TERMINATED) {\n            return;\n          }\n\n          logger.debug('runSessionTimer() | sending session refresh request');\n\n          if (_this27._sessionTimers.refreshMethod === JsSIP_C.UPDATE) {\n            _this27._sendUpdate();\n          } else {\n            _this27._sendReinvite();\n          }\n        }, expires * 500); // Half the given interval (as the RFC states).\n      } // I'm not the refresher.\n      else {\n          this._sessionTimers.timer = setTimeout(function () {\n            if (_this27._status === C.STATUS_TERMINATED) {\n              return;\n            }\n\n            logger.warn('runSessionTimer() | timer expired, terminating the session');\n\n            _this27.terminate({\n              cause: JsSIP_C.causes.REQUEST_TIMEOUT,\n              status_code: 408,\n              reason_phrase: 'Session Timer Expired'\n            });\n          }, expires * 1100);\n        }\n    }\n  }, {\n    key: \"_toggleMuteAudio\",\n    value: function _toggleMuteAudio(mute) {\n      var senders = this._connection.getSenders().filter(function (sender) {\n        return sender.track && sender.track.kind === 'audio';\n      });\n\n      var _iterator8 = _createForOfIteratorHelper(senders),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var sender = _step8.value;\n          sender.track.enabled = !mute;\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n  }, {\n    key: \"_toggleMuteVideo\",\n    value: function _toggleMuteVideo(mute) {\n      var senders = this._connection.getSenders().filter(function (sender) {\n        return sender.track && sender.track.kind === 'video';\n      });\n\n      var _iterator9 = _createForOfIteratorHelper(senders),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var sender = _step9.value;\n          sender.track.enabled = !mute;\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n  }, {\n    key: \"_newRTCSession\",\n    value: function _newRTCSession(originator, request) {\n      logger.debug('newRTCSession()');\n\n      this._ua.newRTCSession(this, {\n        originator: originator,\n        session: this,\n        request: request\n      });\n    }\n  }, {\n    key: \"_connecting\",\n    value: function _connecting(request) {\n      logger.debug('session connecting');\n      logger.debug('emit \"connecting\"');\n      this.emit('connecting', {\n        request: request\n      });\n    }\n  }, {\n    key: \"_progress\",\n    value: function _progress(originator, response) {\n      logger.debug('session progress');\n      logger.debug('emit \"progress\"');\n      this.emit('progress', {\n        originator: originator,\n        response: response || null\n      });\n    }\n  }, {\n    key: \"_accepted\",\n    value: function _accepted(originator, message) {\n      logger.debug('session accepted');\n      this._start_time = new Date();\n      logger.debug('emit \"accepted\"');\n      this.emit('accepted', {\n        originator: originator,\n        response: message || null\n      });\n    }\n  }, {\n    key: \"_confirmed\",\n    value: function _confirmed(originator, ack) {\n      logger.debug('session confirmed');\n      this._is_confirmed = true;\n      logger.debug('emit \"confirmed\"');\n      this.emit('confirmed', {\n        originator: originator,\n        ack: ack || null\n      });\n    }\n  }, {\n    key: \"_ended\",\n    value: function _ended(originator, message, cause) {\n      logger.debug('session ended');\n      this._end_time = new Date();\n\n      this._close();\n\n      logger.debug('emit \"ended\"');\n      this.emit('ended', {\n        originator: originator,\n        message: message || null,\n        cause: cause\n      });\n    }\n  }, {\n    key: \"_failed\",\n    value: function _failed(originator, message, cause) {\n      logger.debug('session failed'); // Emit private '_failed' event first.\n\n      logger.debug('emit \"_failed\"');\n      this.emit('_failed', {\n        originator: originator,\n        message: message || null,\n        cause: cause\n      });\n\n      this._close();\n\n      logger.debug('emit \"failed\"');\n      this.emit('failed', {\n        originator: originator,\n        message: message || null,\n        cause: cause\n      });\n    }\n  }, {\n    key: \"_onhold\",\n    value: function _onhold(originator) {\n      logger.debug('session onhold');\n\n      this._setLocalMediaStatus();\n\n      logger.debug('emit \"hold\"');\n      this.emit('hold', {\n        originator: originator\n      });\n    }\n  }, {\n    key: \"_onunhold\",\n    value: function _onunhold(originator) {\n      logger.debug('session onunhold');\n\n      this._setLocalMediaStatus();\n\n      logger.debug('emit \"unhold\"');\n      this.emit('unhold', {\n        originator: originator\n      });\n    }\n  }, {\n    key: \"_onmute\",\n    value: function _onmute(_ref5) {\n      var audio = _ref5.audio,\n          video = _ref5.video;\n      logger.debug('session onmute');\n\n      this._setLocalMediaStatus();\n\n      logger.debug('emit \"muted\"');\n      this.emit('muted', {\n        audio: audio,\n        video: video\n      });\n    }\n  }, {\n    key: \"_onunmute\",\n    value: function _onunmute(_ref6) {\n      var audio = _ref6.audio,\n          video = _ref6.video;\n      logger.debug('session onunmute');\n\n      this._setLocalMediaStatus();\n\n      logger.debug('emit \"unmuted\"');\n      this.emit('unmuted', {\n        audio: audio,\n        video: video\n      });\n    }\n  }, {\n    key: \"C\",\n    get: function get() {\n      return C;\n    } // Expose session failed/ended causes as a property of the RTCSession instance.\n\n  }, {\n    key: \"causes\",\n    get: function get() {\n      return JsSIP_C.causes;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"connection\",\n    get: function get() {\n      return this._connection;\n    }\n  }, {\n    key: \"contact\",\n    get: function get() {\n      return this._contact;\n    }\n  }, {\n    key: \"direction\",\n    get: function get() {\n      return this._direction;\n    }\n  }, {\n    key: \"local_identity\",\n    get: function get() {\n      return this._local_identity;\n    }\n  }, {\n    key: \"remote_identity\",\n    get: function get() {\n      return this._remote_identity;\n    }\n  }, {\n    key: \"start_time\",\n    get: function get() {\n      return this._start_time;\n    }\n  }, {\n    key: \"end_time\",\n    get: function get() {\n      return this._end_time;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    },\n    set: function set(_data) {\n      this._data = _data;\n    }\n  }, {\n    key: \"status\",\n    get: function get() {\n      return this._status;\n    }\n  }]);\n\n  return RTCSession;\n}(EventEmitter);"]},"metadata":{},"sourceType":"script"}